2024-08-05T21:29:55.690Z - WARNING -                 setup_irods.py: 192 - Warning: Hostname `226b6894d9f2` should be a fully qualified domain name.
2024-08-05T21:29:55.690Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/hostname_resolves_to_local_address', '226b6894d9f2'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:55.701Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/hostname_resolves_to_local_address', '226b6894d9f2'] returned with code 0.
stdout:
  yes
2024-08-05T21:29:55.701Z -    INFO -               configuration.py: 297 - Updating /var/lib/irods/version.json...
2024-08-05T21:29:55.702Z -    INFO -                 setup_irods.py: 258 - The iRODS service account name needs to be defined.
2024-08-05T21:29:55.702Z -   DEBUG -                         lib.py: 427 - iRODS user [irods]: 
2024-08-05T21:29:55.702Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:55.702Z -   DEBUG -                         lib.py: 427 - iRODS group [irods]: 
2024-08-05T21:29:55.702Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:55.702Z -    INFO -                 setup_irods.py: 269 - 
+--------------------------------+
| Setting up the service account |
+--------------------------------+

2024-08-05T21:29:55.702Z -    INFO -                 setup_irods.py: 272 - Creating Service Group: irods
2024-08-05T21:29:55.702Z -   DEBUG -                     execute.py:  50 - Calling ['groupadd', '-r', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:56.108Z -   DEBUG -                     execute.py:  35 - Command ['groupadd', '-r', 'irods'] returned with code 0.
2024-08-05T21:29:56.109Z -   DEBUG -                     execute.py:  50 - Calling ['id', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:56.115Z -   DEBUG -                     execute.py:  35 - Command ['id', 'irods'] returned with code 1.
stderr:
  id: ‘irods’: no such user
2024-08-05T21:29:56.116Z -    INFO -                 setup_irods.py: 283 - Creating Service Account: irods
2024-08-05T21:29:56.116Z -   DEBUG -                     execute.py:  50 - Calling ['useradd', '-r', '-d', '/var/lib/irods', '-M', '-s', '/bin/bash', '-g', 'irods', '-c', 'iRODS Administrator', '-p', '!', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:56.137Z -   DEBUG -                     execute.py:  35 - Command ['useradd', '-r', '-d', '/var/lib/irods', '-M', '-s', '/bin/bash', '-g', 'irods', '-c', 'iRODS Administrator', '-p', '!', 'irods'] returned with code 0.
2024-08-05T21:29:56.137Z -    INFO -                 setup_irods.py: 301 - Setting owner of /var/lib/irods to irods:irods
2024-08-05T21:29:56.161Z -    INFO -                 setup_irods.py: 312 - Setting owner of /etc/irods to irods:irods
2024-08-05T21:29:56.161Z -   DEBUG -                 setup_irods.py: 323 - Setting uid bit on /var/lib/irods/clients/bin/genOSAuth
2024-08-05T21:29:56.162Z -   DEBUG -                     execute.py:  50 - Calling ['su', '-', 'irods', '-c', 'python3 -c "from __future__ import print_function; import os; import json; print(json.dumps(dict(os.environ)))"'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:56.210Z -   DEBUG -                     execute.py:  35 - Command ['su', '-', 'irods', '-c', 'python3 -c "from __future__ import print_function; import os; import json; print(json.dumps(dict(os.environ)))"'] returned with code 0.
stdout:
  {"SHELL": "/bin/bash", "PWD": "/var/lib/irods", "LOGNAME": "irods", "HOME": "/var/lib/irods", "USER": "irods", "SHLVL": "0", "PATH": "/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games", "MAIL": "/var/mail/irods", "_": "/usr/bin/python3", "LC_CTYPE": "C.UTF-8"}
2024-08-05T21:29:56.211Z -   DEBUG -               configuration.py: 435 - /etc/irods/server_config.json does not exist, copying from template file /var/lib/irods/packaging/server_config.json.template
2024-08-05T21:29:56.211Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:29:56.212Z -   DEBUG -                         lib.py: 427 - iRODS server's role:
1. provider
2. consumer
Please select a number or choose 0 to enter a new value [1]: 
2024-08-05T21:29:56.212Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:56.212Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:29:56.230Z -    INFO -                 setup_irods.py: 120 - 
+-----------------------------------------+
| Configuring the database communications |
+-----------------------------------------+

2024-08-05T21:29:56.231Z -   DEBUG -          database_interface.py:  97 - setup_database_config has been called with database type 'postgres'.
2024-08-05T21:29:56.231Z -    INFO -          database_interface.py:  99 - You are configuring an iRODS database plugin. The iRODS server cannot be started until its database has been properly configured.

2024-08-05T21:29:56.231Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-q', '-d'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:56.236Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-q', '-d'] returned with code 0.
stdout:
  [PostgreSQL ANSI]
  [PostgreSQL Unicode]
2024-08-05T21:29:56.236Z -   DEBUG -                         lib.py: 427 - ODBC driver for postgres:
1. PostgreSQL ANSI
2. PostgreSQL Unicode
Please select a number or choose 0 to enter a new value [1]: 
2024-08-05T21:29:56.236Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:56.236Z -   DEBUG -               configuration.py:  92 - No driver found in the database config, attempting to retrieve the one in the odbc ini file at "/var/lib/irods/.odbc.ini"...
2024-08-05T21:29:56.237Z -   DEBUG -               configuration.py:  98 - No odbc.ini file present
2024-08-05T21:29:56.237Z -   DEBUG -               configuration.py: 105 - Unable to retrieve "Driver" field from odbc ini file
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - Database server's hostname or IP address [localhost]: 
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 432 - User input: 365fec06c3e7
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - Database server's port [5432]: 
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 432 - User input: 5432
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - Database name [ICAT]: 
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 432 - User input: ICAT
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - Database username [irods]: 
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 432 - User input: irods
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - 
-------------------------------------------
Database Type: postgres
ODBC Driver:   PostgreSQL ANSI
Database Host: 365fec06c3e7
Database Port: 5432
Database Name: ICAT
Database User: irods
-------------------------------------------

Please confirm [yes]: 
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 432 - User input: y
2024-08-05T21:29:56.237Z -   DEBUG -                         lib.py: 427 - Database password: 
2024-08-05T21:29:56.237Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:29:56.238Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:29:56.239Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:29:56.246Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=365fec06c3e7
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:29:56.275Z -    INFO -            database_connect.py: 273 - Listing database tables...
2024-08-05T21:29:56.278Z -   DEBUG -            database_connect.py: 275 - List of tables:
[]
2024-08-05T21:29:56.279Z -   DEBUG -                         lib.py: 427 - Salt for passwords stored in the database: 
2024-08-05T21:29:56.279Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:29:56.280Z -    INFO -                 setup_irods.py: 216 - 
+---------------------------+
| Determining local storage |
+---------------------------+

2024-08-05T21:29:56.280Z -   DEBUG -                         lib.py: 427 - Local storage on this server [yes]: 
2024-08-05T21:29:56.280Z -   DEBUG -                         lib.py: 432 - User input: y
2024-08-05T21:29:56.280Z -    INFO -                 setup_irods.py: 223 - True
2024-08-05T21:29:56.280Z -    INFO -                 setup_irods.py: 231 - 
+----------------------------------+
| Setting up default resource name |
+----------------------------------+

2024-08-05T21:29:56.281Z -   DEBUG -                         lib.py: 427 - Default resource [demoResc]: 
2024-08-05T21:29:56.281Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:56.281Z -    INFO -                 setup_irods.py: 246 - 
+--------------------------+
| Setting up default vault |
+--------------------------+

2024-08-05T21:29:56.281Z -   DEBUG -                         lib.py: 427 - iRODS Vault directory [/var/lib/irods/Vault]: 
2024-08-05T21:29:56.281Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:56.281Z -    INFO -                 setup_irods.py: 355 - 
+--------------------------------+
| Configuring the server options |
+--------------------------------+

2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 427 - iRODS server's zone name [tempZone]: 
2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 432 - User input: tempZone
2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 427 - iRODS server's port [1247]: 
2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 432 - User input: 1247
2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 427 - iRODS port range (begin) [20000]: 
2024-08-05T21:29:56.282Z -   DEBUG -                         lib.py: 432 - User input: 20000
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - iRODS port range (end) [20199]: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 432 - User input: 20199
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - Control Plane port [1248]: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 432 - User input: 1248
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - Schema Validation Base URI (or off) [file:///var/lib/irods/configuration_schemas]: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - iRODS server's administrator username [rods]: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 432 - User input: rods
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - 
-------------------------------------------
Zone name:                  tempZone
iRODS server port:          1247
iRODS port range (begin):   20000
iRODS port range (end):     20199
Control plane port:         1248
Schema validation base URI: file:///var/lib/irods/configuration_schemas
iRODS server administrator: rods
-------------------------------------------

Please confirm [yes]: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 432 - User input: y
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - iRODS server's zone key: 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - iRODS server's negotiation key (32 characters): 
2024-08-05T21:29:56.283Z -   DEBUG -                         lib.py: 427 - Control Plane key (32 characters): 
2024-08-05T21:29:56.283Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:29:56.284Z -    INFO -                 setup_irods.py: 451 - 
+-----------------------------------+
| Setting up the client environment |
+-----------------------------------+

2024-08-05T21:29:56.285Z -   DEBUG -                         lib.py: 427 - iRODS server's administrator password: 
2024-08-05T21:29:56.285Z -   DEBUG -               configuration.py: 226 - Writing password file /var/lib/irods/.irods/.irodsA
2024-08-05T21:29:56.286Z -    INFO -               configuration.py: 297 - Updating /var/lib/irods/.irods/irods_environment.json...
2024-08-05T21:29:56.287Z -    INFO -                 setup_irods.py: 131 - 
+-------------------------+
| Setting up the database |
+-------------------------+

2024-08-05T21:29:56.287Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:29:56.295Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=365fec06c3e7
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:29:56.312Z -    INFO -            database_connect.py: 273 - Listing database tables...
2024-08-05T21:29:56.314Z -   DEBUG -            database_connect.py: 275 - List of tables:
[]
2024-08-05T21:29:56.314Z -    INFO -            database_connect.py: 349 - Creating database tables...
2024-08-05T21:29:56.314Z -   DEBUG -            database_connect.py: 252 - Executing SQL in /var/lib/irods/packaging/sql/icatSysTables.sql
2024-08-05T21:29:56.314Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_ZONE_MAIN ( zone_id bigint not null, zone_name varchar(250) not null, zone_type_name varchar(250) not null, zone_conn_string varchar(1000), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.328Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_USER_MAIN ( user_id bigint not null, user_name varchar(250) not null, user_type_name varchar(250) not null, zone_name varchar(250) not null, user_info varchar(1000), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.330Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RESC_MAIN ( resc_id bigint not null, resc_name varchar(250) not null, zone_name varchar(250) not null, resc_type_name varchar(250) not null, resc_class_name varchar(250) not null, resc_net varchar(250) not null, resc_def_path varchar(1000) not null, free_space varchar(250), free_space_ts varchar(32), resc_info varchar(1000), r_comment varchar(1000), resc_status varchar(32), create_ts varchar(32), modify_ts varchar(32), resc_children varchar(1000), resc_context varchar(1000), resc_parent varchar(1000), resc_objcount bigint DEFAULT 0) ;

2024-08-05T21:29:56.335Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_COLL_MAIN ( coll_id bigint not null, parent_coll_name varchar(2700) not null, coll_name varchar(2700) not null, coll_owner_name varchar(250) not null, coll_owner_zone varchar(250) not null, coll_map_id bigint DEFAULT 0, coll_inheritance varchar(1000), coll_type varchar(250) DEFAULT '0', coll_info1 varchar(2700) DEFAULT '0', coll_info2 varchar(2700) DEFAULT '0', coll_expiry_ts varchar(32), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.339Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_DATA_MAIN ( data_id bigint not null, coll_id bigint not null, data_name varchar(1000) not null, data_repl_num INTEGER not null, data_version varchar(250) DEFAULT '0', data_type_name varchar(250) not null, data_size bigint not null, resc_group_name varchar(250), resc_name varchar(250) not null, data_path varchar(2700) not null, data_owner_name varchar(250) not null, data_owner_zone varchar(250) not null, data_is_dirty INTEGER DEFAULT 0, data_status varchar(250), data_checksum varchar(1000), data_expiry_ts varchar(32), data_map_id bigint DEFAULT 0, data_mode varchar(32), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32), resc_hier varchar(1000)) ;

2024-08-05T21:29:56.341Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_META_MAIN ( meta_id bigint not null, meta_namespace varchar(250), meta_attr_name varchar(2700) not null, meta_attr_value varchar(2700) not null, meta_attr_unit varchar(250), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.343Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_TOKN_MAIN ( token_namespace varchar(250) not null, token_id bigint not null, token_name varchar(250) not null, token_value varchar(250), token_value2 varchar(250), token_value3 varchar(250), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.345Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_MAIN ( rule_id bigint not null, rule_version varchar(250) DEFAULT '0', rule_base_name varchar(250) not null, rule_name varchar(2700) not null, rule_event varchar(2700) not null, rule_condition varchar(2700), rule_body varchar(2700) not null, rule_recovery varchar(2700) not null, rule_status bigint DEFAULT 1, rule_owner_name varchar(250) not null, rule_owner_zone varchar(250) not null, rule_descr_1 varchar(2700), rule_descr_2 varchar(2700), input_params varchar(2700), output_params varchar(2700), dollar_vars varchar(2700), icat_elements varchar(2700), sideeffects varchar(2700), r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.348Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_BASE_MAP ( map_version varchar(250) DEFAULT '0', map_base_name varchar(250) not null, map_priority INTEGER not null, rule_id bigint not null, map_owner_name varchar(250) not null, map_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.350Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_DVM ( dvm_id bigint not null, dvm_version varchar(250) DEFAULT '0', dvm_base_name varchar(250) not null, dvm_ext_var_name varchar(250) not null, dvm_condition varchar(2700), dvm_int_map_path varchar(2700) not null, dvm_status INTEGER DEFAULT 1, dvm_owner_name varchar(250) not null, dvm_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.352Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_DVM_MAP ( map_dvm_version varchar(250) DEFAULT '0', map_dvm_base_name varchar(250) not null, dvm_id bigint not null, map_owner_name varchar(250) not null, map_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.354Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_FNM ( fnm_id bigint not null, fnm_version varchar(250) DEFAULT '0', fnm_base_name varchar(250) not null, fnm_ext_func_name varchar(250) not null, fnm_int_func_name varchar(2700) not null, fnm_status INTEGER DEFAULT 1, fnm_owner_name varchar(250) not null, fnm_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.356Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_FNM_MAP ( map_fnm_version varchar(250) DEFAULT '0', map_fnm_base_name varchar(250) not null, fnm_id bigint not null, map_owner_name varchar(250) not null, map_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.358Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_MICROSRVC_MAIN ( msrvc_id bigint not null, msrvc_name varchar(250) not null, msrvc_module_name varchar(250) not null, msrvc_signature varchar(2700) not null, msrvc_doxygen varchar(2500) not null, msrvc_variations varchar(2500) not null, msrvc_owner_name varchar(250) not null, msrvc_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.360Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_MICROSRVC_VER ( msrvc_id bigint not null, msrvc_version varchar(250) DEFAULT '0', msrvc_host varchar(250) DEFAULT 'ALL', msrvc_location varchar(500), msrvc_language varchar(250) DEFAULT 'C', msrvc_type_name varchar(250) DEFAULT 'IRODS COMPILED', msrvc_status bigint DEFAULT 1, msrvc_owner_name varchar(250) not null, msrvc_owner_zone varchar(250) not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.362Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RULE_EXEC ( rule_exec_id bigint not null, rule_name varchar(2700) not null, rei_file_path varchar(2700), user_name varchar(250), exe_address varchar(250), exe_time varchar(32), exe_frequency varchar(250), priority varchar(32), estimated_exe_time varchar(32), notification_addr varchar(250), last_exe_time varchar(32), exe_status varchar(32), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.364Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_USER_GROUP ( group_user_id bigint not null, user_id bigint not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.365Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_USER_SESSION_KEY ( user_id bigint not null, session_key varchar(1000) not null, session_info varchar(1000) , auth_scheme varchar(250) not null, session_expiry_ts varchar(32) not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.367Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_USER_PASSWORD ( user_id bigint not null, rcat_password varchar(250) not null, pass_expiry_ts varchar(32) not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.368Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_RESC_GROUP ( resc_group_id bigint not null, resc_group_name varchar(250) not null, resc_id bigint not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.369Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_OBJT_METAMAP ( object_id bigint not null, meta_id bigint not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.369Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_OBJT_ACCESS ( object_id bigint not null, user_id bigint not null, access_type_id bigint not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.370Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_OBJT_DENY_ACCESS ( object_id bigint not null, user_id bigint not null, access_type_id bigint not null, create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.371Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_OBJT_AUDIT ( object_id bigint not null, user_id bigint not null, action_id bigint not null, r_comment varchar(1000), create_ts varchar(32), modify_ts varchar(32)) ;

2024-08-05T21:29:56.373Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_SERVER_LOAD ( host_name varchar(250) not null, resc_name varchar(250) not null, cpu_used INTEGER, mem_used INTEGER, swap_used INTEGER, runq_load INTEGER, disk_space INTEGER, net_input INTEGER, net_output INTEGER, create_ts varchar(32)) ;

2024-08-05T21:29:56.375Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_SERVER_LOAD_DIGEST ( resc_name varchar(250) not null, load_factor INTEGER, create_ts varchar(32)) ;

2024-08-05T21:29:56.376Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_USER_AUTH ( user_id bigint not null, user_auth_name varchar(1000), create_ts varchar(32)) ;

2024-08-05T21:29:56.377Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_QUOTA_MAIN ( user_id bigint, resc_id bigint, quota_limit bigint, quota_over bigint, modify_ts varchar(32)) ;

2024-08-05T21:29:56.378Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_QUOTA_USAGE ( user_id bigint, resc_id bigint, quota_usage bigint, modify_ts varchar(32)) ;

2024-08-05T21:29:56.378Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_SPECIFIC_QUERY ( alias varchar(1000), sqlStr varchar(2700), create_ts varchar(32)) ;

2024-08-05T21:29:56.380Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_TICKET_MAIN ( ticket_id bigint not null, ticket_string varchar(100), ticket_type varchar(20), user_id bigint not null, object_id bigint not null, object_type varchar(16), uses_limit int DEFAULT 0, uses_count int DEFAULT 0, write_file_limit int DEFAULT 10, write_file_count int DEFAULT 0, write_byte_limit int DEFAULT 0, write_byte_count int DEFAULT 0, ticket_expiry_ts varchar(32), restrictions varchar(16), create_ts varchar(32), modify_ts varchar(32));

2024-08-05T21:29:56.381Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_TICKET_ALLOWED_HOSTS ( ticket_id bigint not null, host varchar(32));

2024-08-05T21:29:56.382Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_TICKET_ALLOWED_USERS ( ticket_id bigint not null, user_name varchar(250) not null);

2024-08-05T21:29:56.383Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_TICKET_ALLOWED_GROUPS ( ticket_id bigint not null, group_name varchar(250) not null);

2024-08-05T21:29:56.384Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create table R_GRID_CONFIGURATION ( namespace varchar(2700), option_name varchar(2700), option_value varchar(2700));

2024-08-05T21:29:56.386Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create sequence R_ObjectId increment by 1 start with 10000;

2024-08-05T21:29:56.387Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_zone_main1 on R_ZONE_MAIN (zone_id);

2024-08-05T21:29:56.388Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_zone_main2 on R_ZONE_MAIN (zone_name);

2024-08-05T21:29:56.389Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_user_main1 on R_USER_MAIN (user_id);

2024-08-05T21:29:56.391Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_user_main2 on R_USER_MAIN (user_name,zone_name);

2024-08-05T21:29:56.392Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_resc_main1 on R_RESC_MAIN (resc_id);

2024-08-05T21:29:56.394Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_resc_main2 on R_RESC_MAIN (zone_name,resc_name);

2024-08-05T21:29:56.395Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_coll_main3 on R_COLL_MAIN (coll_name );

2024-08-05T21:29:56.397Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_coll_main1 on R_COLL_MAIN (coll_id);

2024-08-05T21:29:56.398Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_coll_main2 on R_COLL_MAIN (parent_coll_name ,coll_name );

2024-08-05T21:29:56.400Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_data_main1 on R_DATA_MAIN (data_id);

2024-08-05T21:29:56.401Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_data_main2 on R_DATA_MAIN (coll_id,data_name ,data_repl_num,data_version);

2024-08-05T21:29:56.403Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_data_main3 on R_DATA_MAIN (coll_id);

2024-08-05T21:29:56.404Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_data_main4 on R_DATA_MAIN (data_name );

2024-08-05T21:29:56.405Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_data_main5 on R_DATA_MAIN (data_type_name);

2024-08-05T21:29:56.406Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_data_main6 on R_DATA_MAIN (data_path );

2024-08-05T21:29:56.407Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_meta_main1 on R_META_MAIN (meta_id);

2024-08-05T21:29:56.409Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_meta_main2 on R_META_MAIN (meta_attr_name );

2024-08-05T21:29:56.411Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_meta_main3 on R_META_MAIN (meta_attr_value );

2024-08-05T21:29:56.412Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_meta_main4 on R_META_MAIN (meta_attr_unit);

2024-08-05T21:29:56.414Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_rule_main1 on R_RULE_MAIN (rule_id);

2024-08-05T21:29:56.416Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_rule_exec on R_RULE_EXEC (rule_exec_id);

2024-08-05T21:29:56.417Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_user_group1 on R_USER_GROUP (group_user_id,user_id);

2024-08-05T21:29:56.418Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_resc_logical1 on R_RESC_GROUP (resc_group_name,resc_id);

2024-08-05T21:29:56.420Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_objt_metamap1 on R_OBJT_METAMAP (object_id,meta_id);

2024-08-05T21:29:56.421Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_objt_metamap2 on R_OBJT_METAMAP (object_id);

2024-08-05T21:29:56.422Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_objt_metamap3 on R_OBJT_METAMAP (meta_id);

2024-08-05T21:29:56.423Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_objt_access1 on R_OBJT_ACCESS (object_id,user_id);

2024-08-05T21:29:56.425Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_objt_daccs1 on R_OBJT_DENY_ACCESS (object_id,user_id);

2024-08-05T21:29:56.426Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_tokn_main1 on R_TOKN_MAIN (token_id);

2024-08-05T21:29:56.427Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_tokn_main2 on R_TOKN_MAIN (token_name);

2024-08-05T21:29:56.428Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_tokn_main3 on R_TOKN_MAIN (token_value);

2024-08-05T21:29:56.429Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_tokn_main4 on R_TOKN_MAIN (token_namespace);

2024-08-05T21:29:56.430Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_specific_query1 on R_SPECIFIC_QUERY (sqlStr );

2024-08-05T21:29:56.431Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create index idx_specific_query2 on R_SPECIFIC_QUERY (alias );

2024-08-05T21:29:56.433Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_ticket on R_TICKET_MAIN (ticket_string);

2024-08-05T21:29:56.435Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_ticket_host on R_TICKET_ALLOWED_HOSTS (ticket_id, host);

2024-08-05T21:29:56.436Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_ticket_user on R_TICKET_ALLOWED_USERS (ticket_id, user_name);

2024-08-05T21:29:56.437Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_ticket_group on R_TICKET_ALLOWED_GROUPS (ticket_id, group_name);

2024-08-05T21:29:56.438Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
create unique index idx_grid_configuration on R_GRID_CONFIGURATION (namespace , option_name );

2024-08-05T21:29:56.439Z -   DEBUG -            database_connect.py: 252 - Executing SQL in /var/lib/irods/packaging/sql/icatSysInserts.sql
2024-08-05T21:29:56.439Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_GRID_CONFIGURATION values ( 'database', 'schema_version', '1' );

2024-08-05T21:29:56.439Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',0,'zone_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',1,'user_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',2,'data_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',3,'resc_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',4,'action_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',5,'rulexec_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',6,'access_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.440Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',7,'object_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',8,'resc_class','','','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',9,'coll_map','','','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('token_namespace',10,'auth_scheme_type','','','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('zone_type',100,'local','','native zone of this iCAT','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('zone_type',101,'remote','','foreign zone','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('user_type',200,'rodsgroup','','rods group users','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('user_type',201,'rodsadmin','','rods administrators','','','1170000000','1170000000');

2024-08-05T21:29:56.441Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('user_type',202,'rodsuser','','normal rods user','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('user_type',204,'groupadmin','','user group administrators','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',300,'data','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',301,'resource','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',302,'user','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',303,'rule','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',304,'metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',305,'zone','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',306,'collection','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('object_type',307,'token','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',400,'unixfilesystem','','','','','1170000000','1170000000');

2024-08-05T21:29:56.442Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',401,'hpss file system','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',402,'windows file system','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',403,'s3','','','','','1250100000','1250100000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',404,'MSS universal driver','','','','','1250100000','1250100000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',405,'database','','','','','1288631300','1288631300');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('resc_type',406,'mso','','','','','1312910000','1312910000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',600,'immediate','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',601,'delayed','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',602,'queued','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',603,'before','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',604,'after','','','','','1170000000','1170000000');

2024-08-05T21:29:56.443Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('rulexec_type',605,'concurrent','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1000,'null','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1010,'execute','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1020,'read annotation','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1030,'read system metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1040,'read metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1050,'read object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1060,'write annotation','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1070,'create metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1080,'modify metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1090,'delete metadata','','','','','1170000000','1170000000');

2024-08-05T21:29:56.444Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1100,'administer object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1110,'create object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1120,'modify object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1130,'delete object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1140,'create token','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1150,'delete token','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1160,'curate','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('access_type',1200,'own','','','','','1170000000','1170000000');

2024-08-05T21:29:56.445Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('coll_map',1400,'generic','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('coll_map',1401,'direct','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('coll_map',1402,'hard link','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('coll_map',1403,'soft link','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('auth_scheme_type',1500,'SPASSWORD','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('auth_scheme_type',1501,'GSI','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1600,'generic','','','','','1170000000','1170000000');

2024-08-05T21:29:56.446Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1601,'text','text/text','|.txt|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1602,'ascii text','text/text','|.txt|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1603,'ascii compressed Lempel-Ziv','','|.z|.zip|.gz|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1604,'ascii compressed Huffman','','|.z|.zip|.gz|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1605,'ebcdic text','text/text','|.txt|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1606,'ebcdic compressed Lempel-Ziv','','|.z|.zip|.gz|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1607,'ebcdic compressed Huffman','','|.z|.zip|.gz|','','','1170000000','1170000000');

2024-08-05T21:29:56.447Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1608,'image','','','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1609,'tiff image','image/tiff','|.tif|.tiff|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1610,'uuencoded tiff','text/text','|.uu|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1611,'gif image','image/gif','|.gif|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1612,'jpeg image','image/jpeg','|.jpeg|.jpg|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1613,'pbm image','image/pbm','|.pbm|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1614,'fig image','image/fig','|.fig|','','','1170000000','1170000000');

2024-08-05T21:29:56.448Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1615,'FITS image','application/x-fits','|.fits|.fit|','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1616,'DICOM image','application/dicom','|.IMA|.ima|','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1617,'print-format','','','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1618,'LaTeX format','text/text','|.tex|','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1619,'Troff format','text/text','|.trf|.trof|','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1620,'Postscript format','application/postscript','|.ps|','','','1170000000','1170000000');

2024-08-05T21:29:56.449Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1621,'DVI format','application/dvi','|.dvi|','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1622,'Word format','application/msword','|.doc|.rtf|','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1623,'program code','text/text','','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1624,'SQL script','text/text','|.sql|','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1625,'C code','text/text','|.c|','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1626,'C include file','text/text','|.c|','','','1170000000','1170000000');

2024-08-05T21:29:56.450Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1627,'fortran code','text/text','|.f|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1628,'object code','','|.o|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1629,'library code','','|.a|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1630,'data file','','|.dat|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1631,'html','text/html','|.htm|.html|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1632,'SGML File','text/sgml','|.sgm|.sgml|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1633,'Wave Audio','audio/x-wav','|.wav|','','','1170000000','1170000000');

2024-08-05T21:29:56.451Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1634,'tar file','text/text','|.tar|','','','1170000000','1170000000');

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1635,'compressed tar file','|.tz|.tgz|.zip|','','','','1170000000','1170000000'  );

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1636,'java code','text/text','|.jav|.java|','','','1170000000','1170000000');

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1637,'perl script','text/text','|.pl|','','','1170000000','1170000000'  );

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1638,'tcl script','text/text','|.tcl|','','','1170000000','1170000000'  );

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1639,'link code','','|.o|','','','1170000000','1170000000');

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1640,'shadow object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.452Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1641,'database shadow object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1642,'directory shadow object','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1643,'database','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1644,'streams','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1645,'audio streams','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1646,'realAudio','audio/x-pn-realaudio','|.ra|','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1647,'video streams','','','','','1170000000','1170000000');

2024-08-05T21:29:56.453Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1648,'realVideo','audio/x-pn-realaudio','|.rv|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1649,'MPEG','video/mpeg','|.mpeg|.mpg|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1650,'AVI','video/msvideo','|.avi|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1651,'PNG-Portable Network Graphics','image/png','|.png|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1652,'MP3 - MPEG Audio','audio/x-mpeg','|.mp3|.mpa|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1653,'WMV-Windows Media Video','video/x-wmv','|.wmv|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1654,'BMP -Bit Map','image/bmp','|.bmp|','','','1170000000','1170000000');

2024-08-05T21:29:56.454Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1655,'CSS-Cascading Style Sheet','','','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1656,'xml','text/xml','|.xml|','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1657,'Slide','','','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1658,'Power Point Slide','application/vnd.ms-powerpoint','|.ppt|','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1659,'Spread Sheet','','','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1660,'Excel Spread Sheet','application/x-msexcel','|.xls|','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1661,'Document','','','','','1170000000','1170000000');

2024-08-05T21:29:56.455Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1622,'MSWord Document','application/msword','|.doc|.rtf|','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1663,'PDF Document','application/pdf','|.pdf|','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1664,'Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1665,'NT Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1666,'Solaris Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1667,'AIX Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1668,'Mac Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1669,'Mac OSX Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.456Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1670,'Cray Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1671,'SGI Executable','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1672,'DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1673,'NT DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1674,'Solaris DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1675,'AIX DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1676,'Mac DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.457Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1677,'Cray DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1678,'SGI DLL','','','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1679,'Movie','','','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1680,'MPEG Movie','video/mpeg','|.mpeg|.mpg|','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1681,'MPEG 3 Movie','video/mpeg','|.mpeg|.mpg|','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1682,'Quicktime Movie','video/quicktime','|.mov|','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1683,'compressed file','','','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1684,'compressed mmCIF file','','|.cif|.mmcif|','','','1170000000','1170000000');

2024-08-05T21:29:56.458Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1685,'compressed PDB file','','|.pdb|','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1686,'binary file','','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1687,'URL','text/html','|.htm|.html|','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1688,'NSF Award Abstracts','text/text','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1689,'email','text/text','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1690,'orb data','','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1691,'datascope data','','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1692,'DICOM header','','','','','1170000000','1170000000');

2024-08-05T21:29:56.459Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1693,'XML Schema','text/xml','|.xsd|','','','1170000000','1170000000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1694,'tar bundle','','','','','1250100000','1250100000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1695,'database object','text','','','','1288631300','1288631300');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1696,'mso','','','','','1312910000','1312910000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1697,'gzipTar','','|.tar.gz|','','','1324000000','1324000000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1698,'bzip2Tar','','|.tar.bz2|','','','1324000000','1324000000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1699,'gzipFile','','|.gz|','','','1324000000','1324000000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1700,'bzip2File','','|.bz2|','','','1324000000','1324000000');

2024-08-05T21:29:56.460Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1701,'zipFile','','|.zip|','','','1324000000','1324000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1702,'gzipTar bundle','','','','','1324000000','1324000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1703,'bzip2Tar bundle','','','','','1324000000','1324000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1704,'zipFile bundle','','','','','1324000000','1324000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('data_type',1705,'msso file','','','','','1324000000','1324000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_TOKN_MAIN values ('action_type',1800,'generic','','','','','1170000000','1170000000');

2024-08-05T21:29:56.461Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('ls', 'select alias, sqlStr from R_SPECIFIC_QUERY', '01292940000');

2024-08-05T21:29:56.462Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('lsl', 'select alias, sqlStr from R_SPECIFIC_QUERY where sqlStr like ?', '01292940000');

2024-08-05T21:29:56.462Z -   DEBUG -            database_connect.py: 258 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('ShowCollAcls', 'select distinct R_USER_MAIN.user_name, R_USER_MAIN.zone_name, R_TOKN_MAIN.token_name, R_USER_MAIN.user_type_name from R_USER_MAIN, R_TOKN_MAIN, R_OBJT_ACCESS, R_COLL_MAIN where R_OBJT_ACCESS.object_id = R_COLL_MAIN.coll_id AND R_COLL_MAIN.coll_name = ? AND R_TOKN_MAIN.token_namespace = ''access_type'' AND R_USER_MAIN.user_id = R_OBJT_ACCESS.user_id AND R_OBJT_ACCESS.access_type_id = R_TOKN_MAIN.token_id', '01342019000');

2024-08-05T21:29:56.462Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.462Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_ZONE_MAIN values (?,?,'local','','',?,?);
with the following parameters:
(10000, 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.463Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.463Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_MAIN values (?,?,?,?,'','',?,?);
with the following parameters:
(10001, 'public', 'rodsgroup', 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.463Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.463Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_MAIN values (?,?,?,?,'','',?,?);
with the following parameters:
(10002, 'rods', 'rodsadmin', 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.464Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_GROUP values (?,?,?,?);
with the following parameters:
(10002, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.464Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_GROUP values (?,?,?,?);
with the following parameters:
(10001, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.464Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_GROUP values (?,?,?,?);
with the following parameters:
(10001, 10001, '01722893396', '01722893396')
2024-08-05T21:29:56.465Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_USER_PASSWORD values (?,?,'9999-12-31-23.59.00',?,?);
with the following parameters:
<hidden>
2024-08-05T21:29:56.465Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.465Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10003, '/', '/', 'rods', 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.466Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10003, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.466Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.466Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10004, '/', '/tempZone', 'rods', 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.467Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10004, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.467Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.467Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10005,
 '/tempZone',
 '/tempZone/home',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.467Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10005, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.468Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.468Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10006,
 '/tempZone',
 '/tempZone/trash',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.468Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10006, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.468Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.468Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10007,
 '/tempZone/trash',
 '/tempZone/trash/home',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.469Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10007, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.469Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.469Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10008,
 '/tempZone/home',
 '/tempZone/home/public',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.469Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10008, 10001, '01722893396', '01722893396')
2024-08-05T21:29:56.470Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.470Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10009,
 '/tempZone/trash/home',
 '/tempZone/trash/home/public',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.470Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10009, 10001, '01722893396', '01722893396')
2024-08-05T21:29:56.470Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.470Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10010,
 '/tempZone/home',
 '/tempZone/home/rods',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.471Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10010, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.471Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.471Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_COLL_MAIN values (?,?,?,?,?,0,'','','','','','',?,?);
with the following parameters:
(10011,
 '/tempZone/trash/home',
 '/tempZone/trash/home/rods',
 'rods',
 'tempZone',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.471Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_OBJT_ACCESS values (?,?,1200,?,?);
with the following parameters:
(10011, 10002, '01722893396', '01722893396')
2024-08-05T21:29:56.471Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.472Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_RESC_MAIN (resc_id,resc_name,zone_name,resc_type_name,resc_class_name,resc_net,resc_def_path,free_space,free_space_ts,resc_info,r_comment,resc_status,create_ts,modify_ts) values (?,'bundleResc',?,'unixfilesystem','bundle','localhost','/bundle','','','','','',?,?);
with the following parameters:
(10012, 'tempZone', '01722893396', '01722893396')
2024-08-05T21:29:56.472Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select nextval('R_OBJECTID');
with the following parameters:
()
2024-08-05T21:29:56.472Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_RESC_MAIN (resc_id,resc_name,zone_name,resc_type_name,resc_class_name,resc_net,resc_def_path,free_space,free_space_ts,resc_info,r_comment,resc_status,create_ts,modify_ts) values (?,?,?,'unixfilesystem','cache',?,?,'','','','','',?,?);
with the following parameters:
(10013,
 'demoResc',
 'tempZone',
 '226b6894d9f2',
 '/var/lib/irods/Vault',
 '01722893396',
 '01722893396')
2024-08-05T21:29:56.472Z -   DEBUG -          database_interface.py:  28 - Committing database changes...
2024-08-05T21:29:56.478Z -    INFO -                 setup_irods.py: 134 - 
+-------------------+
| Starting iRODS... |
+-------------------+

2024-08-05T21:29:56.478Z -   DEBUG -                  controller.py:  62 - Calling start on IrodsController
2024-08-05T21:29:56.478Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:29:56.478Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/.irods/irods_environment.json into dictionary
2024-08-05T21:29:56.479Z -   DEBUG -               configuration.py: 197 - Attempting to construct schema URI...
2024-08-05T21:29:56.479Z -   DEBUG -               configuration.py: 208 - Successfully constructed schema URI.
2024-08-05T21:29:56.479Z -   DEBUG -               configuration.py: 278 - Attempting to validate /etc/irods/server_config.json against file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:29:56.479Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:29:56.479Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:29:56.479Z -   DEBUG -             json_validation.py:  53 - Validating /etc/irods/server_config.json against json schema:
2024-08-05T21:29:56.482Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/server_config.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'advanced_settings': {'properties': {'agent_factory_watcher_sleep_time_in_seconds': {'type': 'integer'},
                                                     'default_number_of_transfer_threads': {'type': 'integer'},
                                                     'default_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'delay_rule_executors': {'items': {'type': 'string'},
                                                                              'type': 'array',
                                                                              'uniqueItems': True},
                                                     'delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'dns_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                  'eviction_age_in_seconds': {'type': 'integer'},
                                                                                  'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                   'type': 'object'},
                                                     'hostname_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                       'eviction_age_in_seconds': {'type': 'integer'},
                                                                                       'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                        'type': 'object'},
                                                     'maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                                                     'maximum_size_of_delay_queue_in_bytes': {'type': 'integer'},
                                                     'maximum_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'migrate_delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'number_of_concurrent_delay_rule_executors': {'type': 'integer'},
                                                     'stacktrace_file_processor_sleep_time_in_seconds': {'type': 'integer'},
                                                     'transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                                                     'transfer_chunk_size_for_parallel_transfer_in_megabytes': {'type': 'integer'}},
                                      'required': ['default_number_of_transfer_threads',
                                                   'default_temporary_password_lifetime_in_seconds',
                                                   'maximum_size_for_single_buffer_in_megabytes',
                                                   'maximum_temporary_password_lifetime_in_seconds',
                                                   'transfer_buffer_size_for_parallel_transfer_in_megabytes',
                                                   'transfer_chunk_size_for_parallel_transfer_in_megabytes'],
                                      'type': 'object'},
                'catalog_provider_hosts': {'items': {'type': 'string'},
                                           'minItems': 1,
                                           'type': 'array',
                                           'uniqueItems': True},
                'catalog_service_role': {'enum': ['consumer', 'provider']},
                'client_api_allowlist_policy': {'enum': ['disabled',
                                                         'enforce']},
                'controlled_user_connection_list': {'properties': {'control_type': {'enum': ['denylist',
                                                                                             'allowlist']},
                                                                   'users': {'items': {'type': 'string'},
                                                                             'type': 'array',
                                                                             'uniqueItems': True}},
                                                    'type': 'object'},
                'default_dir_mode': {'type': 'string'},
                'default_file_mode': {'type': 'string'},
                'default_hash_scheme': {'type': 'string'},
                'environment_variables': {'additionalProperties': {'type': 'string'},
                                          'type': 'object'},
                'federation': {'items': {'properties': {'catalog_provider_hosts': {'items': {'type': 'string'},
                                                                                   'minItems': 1,
                                                                                   'type': 'array',
                                                                                   'uniqueItems': True},
                                                        'negotiation_key': {'maxLength': 32,
                                                                            'minLength': 32,
                                                                            'pattern': '^[A-Za-z0-9_]+$',
                                                                            'type': 'string'},
                                                        'zone_key': {'maxLength': 49,
                                                                     'pattern': '^[A-Za-z0-9_]+$',
                                                                     'type': 'string'},
                                                        'zone_name': {'maxLength': 63,
                                                                      'pattern': '^[A-Za-z0-9_\\.]+$',
                                                                      'type': 'string'},
                                                        'zone_port': {'type': 'integer'}},
                                         'required': ['catalog_provider_hosts',
                                                      'negotiation_key',
                                                      'zone_key',
                                                      'zone_name'],
                                         'type': 'object'},
                               'type': 'array'},
                'host_access_control': {'$ref': 'host_access_control.json'},
                'host_resolution': {'$ref': 'host_resolution.json'},
                'log_level': {'items': {'properties': {'agent': {'enum': ['trace',
                                                                          'debug',
                                                                          'info',
                                                                          'warn',
                                                                          'error',
                                                                          'critical'],
                                                                 'maxItems': 1},
                                                       'agent_factory': {'enum': ['trace',
                                                                                  'debug',
                                                                                  'info',
                                                                                  'warn',
                                                                                  'error',
                                                                                  'critical'],
                                                                         'maxItems': 1},
                                                       'api': {'enum': ['trace',
                                                                        'debug',
                                                                        'info',
                                                                        'warn',
                                                                        'error',
                                                                        'critical'],
                                                               'maxItems': 1},
                                                       'authentication': {'enum': ['trace',
                                                                                   'debug',
                                                                                   'info',
                                                                                   'warn',
                                                                                   'error',
                                                                                   'critical'],
                                                                          'maxItems': 1},
                                                       'database': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'delay_server': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'legacy': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1},
                                                       'microservice': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'network': {'enum': ['trace',
                                                                            'debug',
                                                                            'info',
                                                                            'warn',
                                                                            'error',
                                                                            'critical'],
                                                                   'maxItems': 1},
                                                       'resource': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'rule_engine': {'enum': ['trace',
                                                                                'debug',
                                                                                'info',
                                                                                'warn',
                                                                                'error',
                                                                                'critical'],
                                                                       'maxItems': 1},
                                                       'server': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1}}},
                              'type': 'object'},
                'match_hash_policy': {'type': 'string'},
                'maximum_connections': {'minimum': 1, 'type': 'integer'},
                'negotiation_key': {'maxLength': 32,
                                    'minLength': 32,
                                    'pattern': '^[A-Za-z0-9_]+$',
                                    'type': 'string'},
                'plugin_configuration': {'properties': {'authentication': {'properties': {},
                                                                           'type': 'object'},
                                                        'database': {'additionalProperties': {'$ref': 'database_config.json'},
                                                                     'maxProperties': 1,
                                                                     'minProperties': 1,
                                                                     'type': 'object'},
                                                        'network': {'properties': {},
                                                                    'type': 'object'},
                                                        'resource': {'properties': {},
                                                                     'type': 'object'},
                                                        'rule_engines': {'items': {'$ref': 'rule_engine.json'},
                                                                         'minItems': 1,
                                                                         'type': 'array'}},
                                         'required': ['authentication',
                                                      'network',
                                                      'resource',
                                                      'rule_engines'],
                                         'type': 'object'},
                'schema_name': {'type': 'string'},
                'schema_validation_base_uri': {'type': 'string'},
                'schema_version': {'type': 'string'},
                'server_control_plane_encryption_algorithm': {'type': 'string'},
                'server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'server_control_plane_key': {'maxLength': 32,
                                             'minLength': 32,
                                             'type': 'string'},
                'server_control_plane_port': {'type': 'integer'},
                'server_control_plane_timeout_milliseconds': {'type': 'integer'},
                'server_port_range_end': {'type': 'integer'},
                'server_port_range_start': {'type': 'integer'},
                'zone_auth_scheme': {'type': 'string'},
                'zone_key': {'maxLength': 49,
                             'pattern': '^[A-Za-z0-9_]+$',
                             'type': 'string'},
                'zone_name': {'maxLength': 63,
                              'pattern': '^[A-Za-z0-9_\\.]+$',
                              'type': 'string'},
                'zone_port': {'type': 'integer'},
                'zone_user': {'type': 'string'}},
 'required': ['advanced_settings',
              'catalog_provider_hosts',
              'catalog_service_role',
              'client_api_allowlist_policy',
              'controlled_user_connection_list',
              'default_dir_mode',
              'default_file_mode',
              'default_hash_scheme',
              'environment_variables',
              'federation',
              'host_access_control',
              'host_resolution',
              'log_level',
              'match_hash_policy',
              'negotiation_key',
              'plugin_configuration',
              'rule_engine_namespaces',
              'schema_name',
              'schema_validation_base_uri',
              'schema_version',
              'server_control_plane_encryption_algorithm',
              'server_control_plane_encryption_num_hash_rounds',
              'server_control_plane_key',
              'server_control_plane_port',
              'server_control_plane_timeout_milliseconds',
              'server_port_range_end',
              'server_port_range_start',
              'zone_auth_scheme',
              'zone_key',
              'zone_name',
              'zone_port',
              'zone_user'],
 'type': 'object'}
2024-08-05T21:29:56.491Z -    INFO -             json_validation.py:  74 - Validating [/etc/irods/server_config.json]... Success
2024-08-05T21:29:56.491Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/version.json against file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:29:56.491Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:29:56.491Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:29:56.491Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/version.json against json schema:
2024-08-05T21:29:56.492Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/version.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'catalog_schema_version': {'type': 'integer'},
                'commit_id': {'pattern': '^[0-9a-f]{40}$', 'type': 'string'},
                'installation_time': {'format': 'date-time', 'type': 'string'},
                'irods_version': {'type': 'string'},
                'previous_version': {'oneOf': [{'$ref': '#'},
                                               {'properties': {'catalog_schema_version': {'type': 'integer'},
                                                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                                                             'type': 'string'},
                                                               'configuration_schema_version': {'type': 'integer'},
                                                               'installation_time': {'format': 'date-time',
                                                                                     'type': 'string'},
                                                               'irods_version': {'type': 'string'},
                                                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                                                'required': ['catalog_schema_version',
                                                             'commit_id',
                                                             'configuration_schema_version',
                                                             'irods_version'],
                                                'type': 'object'}]},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['catalog_schema_version',
              'commit_id',
              'irods_version',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:29:56.493Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/version.json]... Success
2024-08-05T21:29:56.493Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/.irods/irods_environment.json against file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:29:56.493Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:29:56.493Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:29:56.493Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/.irods/irods_environment.json against json schema:
2024-08-05T21:29:56.494Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'allOf': [{'$ref': 'client_environment.json'}],
 'properties': {'irods_authentication_file': {'type': 'string'},
                'irods_authentication_scheme': {'type': 'string'},
                'irods_client_server_negotiation': {'enum': ['request_server_negotiation',
                                                             'off']},
                'irods_client_server_policy': {'enum': ['CS_NEG_REFUSE',
                                                        'CS_NEG_REQUIRE',
                                                        'CS_NEG_DONT_CARE']},
                'irods_connection_pool_refresh_time_in_seconds': {'type': 'integer'},
                'irods_cwd': {'type': 'string'},
                'irods_debug': {'type': 'string'},
                'irods_default_hash_scheme': {'type': 'string'},
                'irods_default_number_of_transfer_threads': {'type': 'integer'},
                'irods_default_resource': {'type': 'string'},
                'irods_encryption_algorithm': {'type': 'string'},
                'irods_encryption_key_size': {'type': 'integer'},
                'irods_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_encryption_salt_size': {'type': 'integer'},
                'irods_gsi_server_dn': {'type': 'string'},
                'irods_home': {'type': 'string'},
                'irods_log_level': {'type': 'integer'},
                'irods_match_hash_policy': {'type': 'string'},
                'irods_maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                'irods_plugins_home': {'type': 'string'},
                'irods_server_control_plane_encryption_algorithm': {'type': 'string'},
                'irods_server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_server_control_plane_key': {'type': 'string'},
                'irods_server_control_plane_port': {'type': 'integer'},
                'irods_ssl_ca_certificate_file': {'type': 'string'},
                'irods_ssl_ca_certificate_path': {'type': 'string'},
                'irods_ssl_certificate_chain_file': {'type': 'string'},
                'irods_ssl_certificate_key_file': {'type': 'string'},
                'irods_ssl_dh_params_file': {'type': 'string'},
                'irods_ssl_verify_server': {'enum': ['cert',
                                                     'hostname',
                                                     'none']},
                'irods_tcp_keepalive_intvl_in_seconds': {'type': 'integer'},
                'irods_tcp_keepalive_probes': {'type': 'integer'},
                'irods_tcp_keepalive_time_in_seconds': {'type': 'integer'},
                'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['irods_client_server_negotiation',
              'irods_client_server_policy',
              'irods_connection_pool_refresh_time_in_seconds',
              'irods_cwd',
              'irods_default_hash_scheme',
              'irods_default_number_of_transfer_threads',
              'irods_default_resource',
              'irods_encryption_algorithm',
              'irods_encryption_key_size',
              'irods_encryption_num_hash_rounds',
              'irods_encryption_salt_size',
              'irods_home',
              'irods_match_hash_policy',
              'irods_maximum_size_for_single_buffer_in_megabytes',
              'irods_server_control_plane_encryption_algorithm',
              'irods_server_control_plane_encryption_num_hash_rounds',
              'irods_server_control_plane_key',
              'irods_server_control_plane_port',
              'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:29:56.495Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/.irods/irods_environment.json]... Success
2024-08-05T21:29:56.496Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:29:56.496Z -   DEBUG -                  controller.py: 103 - Attempting to bind socket 1247
2024-08-05T21:29:56.496Z -   DEBUG -                  controller.py: 110 - Socket 1247 bound and released successfully.
2024-08-05T21:29:56.496Z -   DEBUG -          database_interface.py:  37 - Syncing .odbc.ini file...
2024-08-05T21:29:56.496Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:29:56.505Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=365fec06c3e7
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:29:56.505Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:29:56.511Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=365fec06c3e7
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:29:56.523Z -    INFO -          database_interface.py:  40 - Ensuring catalog schema is up-to-date...
2024-08-05T21:29:56.523Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.529Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 1
2024-08-05T21:29:56.529Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:29:56.529Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.530Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 1
2024-08-05T21:29:56.530Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 2...
2024-08-05T21:29:56.530Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listQueryByAliasLike', 'SELECT alias, sqlStr FROM R_SPECIFIC_QUERY WHERE alias LIKE ?', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.530Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('findQueryByAlias', 'SELECT alias, sqlStr FROM R_SPECIFIC_QUERY WHERE alias = ?', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.531Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('ilsLACollections', 'SELECT c.parent_coll_name, c.coll_name, c.create_ts, c.modify_ts, c.coll_id, c.coll_owner_name, c.coll_owner_zone, c.coll_type, u.user_name, u.zone_name, a.access_type_id, u.user_id FROM R_COLL_MAIN c JOIN R_OBJT_ACCESS a ON c.coll_id = a.object_id JOIN R_USER_MAIN u ON a.user_id = u.user_id WHERE c.parent_coll_name = ? ORDER BY c.coll_name, u.user_name, a.access_type_id DESC LIMIT ? OFFSET ?', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.531Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('ilsLADataObjects', 'SELECT s.coll_name, s.data_name, s.create_ts, s.modify_ts, s.data_id, s.data_size, s.data_repl_num, s.data_owner_name, s.data_owner_zone, u.user_name, u.user_id, a.access_type_id, u.user_type_name, u.zone_name FROM ( SELECT c.coll_name, d.data_name, d.create_ts, d.modify_ts, d.data_id, d.data_repl_num, d.data_size, d.data_owner_name, d.data_owner_zone FROM R_COLL_MAIN c JOIN R_DATA_MAIN d ON c.coll_id = d.coll_id WHERE c.coll_name = ? ORDER BY d.data_name) s JOIN R_OBJT_ACCESS a ON s.data_id = a.object_id JOIN R_USER_MAIN u ON a.user_id = u.user_id ORDER BY s.coll_name, s.data_name, u.user_name, a.access_type_id DESC LIMIT ? OFFSET ?', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.531Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listSharedCollectionsOwnedByUser', 'SELECT DISTINCT R_COLL_MAIN.coll_id, R_COLL_MAIN.parent_coll_name, R_COLL_MAIN.coll_name, R_COLL_MAIN.coll_owner_name, R_COLL_MAIN.coll_owner_zone, R_META_MAIN.meta_attr_name, R_META_MAIN.meta_attr_value, R_META_MAIN.meta_attr_unit FROM R_COLL_MAIN JOIN R_OBJT_METAMAP ON R_COLL_MAIN.coll_id = R_OBJT_METAMAP.object_id JOIN R_META_MAIN ON R_OBJT_METAMAP.meta_id = R_META_MAIN.meta_id WHERE R_META_MAIN.meta_attr_unit = ''iRODSUserTagging:Share'' AND R_COLL_MAIN.coll_owner_name = ? AND R_COLL_MAIN.coll_owner_zone = ? ORDER BY R_COLL_MAIN.parent_coll_name ASC, R_COLL_MAIN.coll_name ASC', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.532Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listSharedCollectionsSharedWithUser', 'SELECT DISTINCT R_COLL_MAIN.coll_id, R_COLL_MAIN.parent_coll_name, R_COLL_MAIN.coll_name, R_COLL_MAIN.coll_owner_name, R_COLL_MAIN.coll_owner_zone, R_META_MAIN.meta_attr_name, R_META_MAIN.meta_attr_value, R_META_MAIN.meta_attr_unit, R_USER_MAIN.user_name, R_USER_MAIN.zone_name, R_OBJT_ACCESS.access_type_id FROM R_COLL_MAIN JOIN R_OBJT_METAMAP ON R_COLL_MAIN.coll_id = R_OBJT_METAMAP.object_id JOIN R_META_MAIN ON R_OBJT_METAMAP.meta_id = R_META_MAIN.meta_id JOIN R_OBJT_ACCESS ON R_COLL_MAIN.coll_id = R_OBJT_ACCESS.object_id JOIN R_USER_MAIN ON R_OBJT_ACCESS.user_id = R_USER_MAIN.user_id WHERE R_META_MAIN.meta_attr_unit = ''iRODSUserTagging:Share'' AND R_USER_MAIN.user_name = ? AND R_USER_MAIN.zone_name = ? AND R_COLL_MAIN.coll_owner_name <> ? ORDER BY R_COLL_MAIN.parent_coll_name ASC, R_COLL_MAIN.coll_name ASC', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.532Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listUserACLForDataObjViaGroup', 'SELECT R_USER_MAIN.user_name, R_USER_MAIN.user_id, R_OBJT_ACCESS.access_type_id, R_USER_MAIN.user_type_name, R_USER_MAIN.zone_name, R_COLL_MAIN.coll_name, R_DATA_MAIN.data_name, USER_GROUP_MAIN.user_name, R_DATA_MAIN.data_name, R_COLL_MAIN.coll_name FROM R_USER_MAIN AS USER_GROUP_MAIN JOIN R_USER_GROUP JOIN R_USER_MAIN ON R_USER_GROUP.user_id = R_USER_MAIN.user_id ON USER_GROUP_MAIN.user_id = R_USER_GROUP.group_user_id JOIN R_OBJT_ACCESS ON R_USER_GROUP.group_user_id = R_OBJT_ACCESS.user_id JOIN R_DATA_MAIN JOIN R_COLL_MAIN ON R_DATA_MAIN.coll_id = R_COLL_MAIN.coll_id ON R_OBJT_ACCESS.object_id = R_DATA_MAIN.data_id WHERE  R_COLL_MAIN.coll_name = ? AND R_DATA_MAIN.data_name = ? AND R_USER_MAIN.user_name = ? ORDER BY R_COLL_MAIN.coll_name, R_DATA_MAIN.data_name, R_USER_MAIN.user_name, R_OBJT_ACCESS.access_type_id DESC', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.532Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listUserACLForCollectionViaGroup', 'SELECT R_USER_MAIN.user_name, R_USER_MAIN.user_id, R_OBJT_ACCESS.access_type_id, R_USER_MAIN.user_type_name, R_USER_MAIN.zone_name, R_COLL_MAIN.coll_name, USER_GROUP_MAIN.user_name, R_COLL_MAIN.coll_name FROM R_USER_MAIN AS USER_GROUP_MAIN JOIN R_USER_GROUP JOIN R_USER_MAIN ON R_USER_GROUP.user_id = R_USER_MAIN.user_id ON USER_GROUP_MAIN.user_id = R_USER_GROUP.group_user_id JOIN R_OBJT_ACCESS ON R_USER_GROUP.group_user_id = R_OBJT_ACCESS.user_id JOIN R_COLL_MAIN ON R_OBJT_ACCESS.object_id = R_COLL_MAIN.coll_id WHERE R_COLL_MAIN.coll_name = ? AND R_USER_MAIN.user_name = ? ORDER BY R_COLL_MAIN.coll_name, R_USER_MAIN.user_name, R_OBJT_ACCESS.access_type_id DESC', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.533Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(2,)
2024-08-05T21:29:56.533Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.534Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.534Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 2
2024-08-05T21:29:56.534Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.534Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 2
2024-08-05T21:29:56.535Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 3...
2024-08-05T21:29:56.535Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('DataObjInCollReCur', 'WITH coll AS (SELECT coll_id, coll_name FROM r_coll_main WHERE R_COLL_MAIN.coll_name = ? OR R_COLL_MAIN.coll_name LIKE ?) SELECT DISTINCT d.data_id, (SELECT coll_name FROM coll WHERE coll.coll_id = d.coll_id) coll_name, d.data_name, d.data_repl_num, d.resc_name, d.data_path, d.resc_hier FROM R_DATA_MAIN d WHERE d.coll_id = ANY(ARRAY(SELECT coll_id FROM coll)) ORDER BY coll_name, d.data_name, d.data_repl_num', '1388534400');
with the following parameters:
()
2024-08-05T21:29:56.535Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(3,)
2024-08-05T21:29:56.535Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.536Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.536Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 3
2024-08-05T21:29:56.536Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.537Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 3
2024-08-05T21:29:56.537Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 4...
2024-08-05T21:29:56.537Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
create index idx_quota_main1 on R_QUOTA_MAIN (user_id);
with the following parameters:
()
2024-08-05T21:29:56.540Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
delete from R_TOKN_MAIN where token_name = 'domainadmin';
with the following parameters:
()
2024-08-05T21:29:56.541Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
delete from R_TOKN_MAIN where token_name = 'rodscurators';
with the following parameters:
()
2024-08-05T21:29:56.541Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
delete from R_TOKN_MAIN where token_name = 'storageadmin';
with the following parameters:
()
2024-08-05T21:29:56.542Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(4,)
2024-08-05T21:29:56.542Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.543Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.543Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 4
2024-08-05T21:29:56.543Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.543Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 4
2024-08-05T21:29:56.543Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 5...
2024-08-05T21:29:56.543Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
ALTER TABLE R_DATA_MAIN ADD resc_id bigint;
with the following parameters:
()
2024-08-05T21:29:56.544Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
ALTER TABLE R_RESC_MAIN ADD resc_parent_context varchar(4000);
with the following parameters:
()
2024-08-05T21:29:56.544Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
UPDATE R_SPECIFIC_QUERY SET sqlstr='WITH coll AS (SELECT coll_id, coll_name FROM R_COLL_MAIN WHERE R_COLL_MAIN.coll_name = ? OR R_COLL_MAIN.coll_name LIKE ?) SELECT DISTINCT d.data_id, (SELECT coll_name FROM coll WHERE coll.coll_id = d.coll_id) coll_name, d.data_name, d.data_repl_num, d.resc_name, d.data_path, d.resc_id FROM R_DATA_MAIN d WHERE d.coll_id = ANY(ARRAY(SELECT coll_id FROM coll)) ORDER BY coll_name, d.data_name, d.data_repl_num' where alias='DataObjInCollReCur';
with the following parameters:
()
2024-08-05T21:29:56.544Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select resc_id, resc_name from R_RESC_MAIN;
with the following parameters:
()
2024-08-05T21:29:56.546Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_DATA_MAIN set resc_id=? where resc_hier=? or resc_hier like ?
with the following parameters:
(10012, 'bundleResc', '%;bundleResc')
2024-08-05T21:29:56.546Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_DATA_MAIN set resc_id=? where resc_hier=? or resc_hier like ?
with the following parameters:
(10013, 'demoResc', '%;demoResc')
2024-08-05T21:29:56.547Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update r_resc_main as rdm set resc_parent = am.resc_id from ( select resc_name, resc_id from r_resc_main ) as am where am.resc_name = rdm.resc_parent;
with the following parameters:
()
2024-08-05T21:29:56.547Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select resc_id, resc_children from R_RESC_MAIN where resc_children is not null;
with the following parameters:
()
2024-08-05T21:29:56.548Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(5,)
2024-08-05T21:29:56.548Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.548Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.549Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 5
2024-08-05T21:29:56.549Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.549Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 5
2024-08-05T21:29:56.549Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 6...
2024-08-05T21:29:56.549Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
create index idx_data_main7 on R_DATA_MAIN (resc_id);
with the following parameters:
()
2024-08-05T21:29:56.551Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
create index idx_data_main8 on R_DATA_MAIN (data_is_dirty);
with the following parameters:
()
2024-08-05T21:29:56.552Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(6,)
2024-08-05T21:29:56.552Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.552Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.552Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 6
2024-08-05T21:29:56.552Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.553Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 6
2024-08-05T21:29:56.553Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 7...
2024-08-05T21:29:56.553Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select distinct group_user_id from R_USER_GROUP where group_user_id not in (select distinct group_user_id from R_USER_GROUP where group_user_id = user_id);
with the following parameters:
()
2024-08-05T21:29:56.553Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_SPECIFIC_QUERY (alias, sqlStr, create_ts) values ('listGroupsForUser', 'select group_user_id, user_name from R_USER_GROUP ug inner join R_USER_MAIN u on ug.group_user_id = u.user_id where user_type_name = ''rodsgroup'' and ug.user_id = (select user_id from R_USER_MAIN where user_name = ? and user_type_name != ''rodsgroup'')', '1580297960');
with the following parameters:
()
2024-08-05T21:29:56.554Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(7,)
2024-08-05T21:29:56.554Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.554Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.554Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 7
2024-08-05T21:29:56.554Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.555Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 7
2024-08-05T21:29:56.555Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 8...
2024-08-05T21:29:56.555Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
alter table R_RULE_EXEC add column exe_context text;
with the following parameters:
()
2024-08-05T21:29:56.555Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(8,)
2024-08-05T21:29:56.555Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.555Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.556Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 8
2024-08-05T21:29:56.556Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.556Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 8
2024-08-05T21:29:56.556Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 9...
2024-08-05T21:29:56.556Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_GRID_CONFIGURATION values ('delay_server','leader',?);
with the following parameters:
('226b6894d9f2',)
2024-08-05T21:29:56.557Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_GRID_CONFIGURATION values ('delay_server','successor','');
with the following parameters:
()
2024-08-05T21:29:56.557Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'delete_object' where token_name = 'delete object';
with the following parameters:
()
2024-08-05T21:29:56.557Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'modify_object' where token_name = 'modify object';
with the following parameters:
()
2024-08-05T21:29:56.557Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'create_object' where token_name = 'create object';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'delete_metadata' where token_name = 'delete metadata';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'modify_metadata' where token_name = 'modify metadata';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'create_metadata' where token_name = 'create metadata';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'read_object' where token_name = 'read object';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_TOKN_MAIN set token_name = 'read_metadata' where token_name = 'read metadata';
with the following parameters:
()
2024-08-05T21:29:56.558Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(9,)
2024-08-05T21:29:56.559Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.559Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.559Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 9
2024-08-05T21:29:56.559Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.559Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 9
2024-08-05T21:29:56.559Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 10...
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(10,)
2024-08-05T21:29:56.560Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 10
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 10
2024-08-05T21:29:56.560Z -    INFO -            database_upgrade.py:  15 - Updating to schema version 11...
2024-08-05T21:29:56.560Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
alter table R_RESC_MAIN add column modify_ts_millis varchar(3) default '000';
with the following parameters:
()
2024-08-05T21:29:56.561Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_GRID_CONFIGURATION (namespace, option_name, option_value) values ('authentication','password_extend_lifetime','1');
with the following parameters:
()
2024-08-05T21:29:56.561Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_GRID_CONFIGURATION (namespace, option_name, option_value) values ('authentication','password_min_time','121');
with the following parameters:
()
2024-08-05T21:29:56.561Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
insert into R_GRID_CONFIGURATION (namespace, option_name, option_value) values ('authentication','password_max_time','1209600');
with the following parameters:
()
2024-08-05T21:29:56.561Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
update R_GRID_CONFIGURATION set option_value = ? where namespace = 'database' and option_name = 'schema_version';
with the following parameters:
(11,)
2024-08-05T21:29:56.562Z -   DEBUG -          database_interface.py:  49 - Committing database changes...
2024-08-05T21:29:56.562Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:29:56.563Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 11
2024-08-05T21:29:56.563Z -    INFO -          database_interface.py:  44 - Catalog schema is up-to-date.
2024-08-05T21:29:56.563Z -    INFO -                  controller.py: 133 - Starting iRODS server ...
2024-08-05T21:29:56.563Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsServer'] with options:
{'cwd': '/usr/sbin',
 'env': 'HIDDEN',
 'shell': False,
 'stderr': -1,
 'stdout': -1}
2024-08-05T21:29:56.604Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/irodsServer'] returned with code 0.
2024-08-05T21:29:56.604Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #1
2024-08-05T21:29:57.605Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #2
2024-08-05T21:29:57.606Z -   DEBUG -                  controller.py: 151 - Successfully connected to port 1247.
2024-08-05T21:29:57.607Z -    INFO -                  controller.py: 164 - Success
2024-08-05T21:29:57.608Z -    INFO -                 setup_irods.py: 178 - 
+---------------------------+
| Running Post-Install Test |
+---------------------------+

2024-08-05T21:29:57.609Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsTestPutGet'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:29:57.939Z -   DEBUG -                     execute.py:  35 - Command /usr/sbin/irodsTestPutGet returned with code 0.
2024-08-05T21:29:57.939Z -    INFO -                 setup_irods.py: 183 - Success
2024-08-05T21:29:57.940Z -    INFO -                 setup_irods.py: 156 - 
+-------------------------+
| Log Configuration Notes |
+-------------------------+

2024-08-05T21:29:57.940Z -    INFO -                 setup_irods.py: 157 - iRODS uses syslog for logging. If your OS has a running syslog service, messages
will appear in the system log file (normally located at /var/log/syslog).

See the following for more information about configuring an iRODS-specific log file:

  https://docs.irods.org/4.3.3/system_overview/troubleshooting/
2024-08-05T21:29:57.940Z -    INFO -                 setup_irods.py: 162 - 
+-------------------+
| Stopping iRODS... |
+-------------------+

2024-08-05T21:29:57.940Z -   DEBUG -                  controller.py: 189 - Calling stop on IrodsController
2024-08-05T21:29:57.940Z -    INFO -                  controller.py: 190 - Stopping iRODS server...
2024-08-05T21:29:59.455Z -    INFO -                  controller.py: 224 - Success
2024-08-05T21:29:59.455Z -    INFO -                 setup_irods.py: 165 - 
+---------------------------------------------+
| iRODS is configured and ready to be started |
+---------------------------------------------+

