2024-08-05T21:30:01.262Z -   DEBUG -                  controller.py: 228 - Calling restart on IrodsController
2024-08-05T21:30:01.262Z -   DEBUG -                  controller.py: 189 - Calling stop on IrodsController
2024-08-05T21:30:01.262Z -    INFO -                  controller.py: 190 - Stopping iRODS server...
2024-08-05T21:30:01.262Z - WARNING -                  controller.py: 195 - Server pidfile missing or stale. No iRODS server running?
2024-08-05T21:30:01.263Z -    INFO -                  controller.py: 224 - Success
2024-08-05T21:30:01.263Z -   DEBUG -                  controller.py:  62 - Calling start on IrodsController
2024-08-05T21:30:01.263Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:30:01.263Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:01.263Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/.irods/irods_environment.json into dictionary
2024-08-05T21:30:01.264Z -   DEBUG -               configuration.py: 197 - Attempting to construct schema URI...
2024-08-05T21:30:01.264Z -   DEBUG -               configuration.py: 208 - Successfully constructed schema URI.
2024-08-05T21:30:01.264Z -   DEBUG -               configuration.py: 278 - Attempting to validate /etc/irods/server_config.json against file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:01.264Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:01.264Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:01.264Z -   DEBUG -             json_validation.py:  53 - Validating /etc/irods/server_config.json against json schema:
2024-08-05T21:30:01.267Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/server_config.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'advanced_settings': {'properties': {'agent_factory_watcher_sleep_time_in_seconds': {'type': 'integer'},
                                                     'default_number_of_transfer_threads': {'type': 'integer'},
                                                     'default_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'delay_rule_executors': {'items': {'type': 'string'},
                                                                              'type': 'array',
                                                                              'uniqueItems': True},
                                                     'delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'dns_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                  'eviction_age_in_seconds': {'type': 'integer'},
                                                                                  'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                   'type': 'object'},
                                                     'hostname_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                       'eviction_age_in_seconds': {'type': 'integer'},
                                                                                       'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                        'type': 'object'},
                                                     'maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                                                     'maximum_size_of_delay_queue_in_bytes': {'type': 'integer'},
                                                     'maximum_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'migrate_delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'number_of_concurrent_delay_rule_executors': {'type': 'integer'},
                                                     'stacktrace_file_processor_sleep_time_in_seconds': {'type': 'integer'},
                                                     'transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                                                     'transfer_chunk_size_for_parallel_transfer_in_megabytes': {'type': 'integer'}},
                                      'required': ['default_number_of_transfer_threads',
                                                   'default_temporary_password_lifetime_in_seconds',
                                                   'maximum_size_for_single_buffer_in_megabytes',
                                                   'maximum_temporary_password_lifetime_in_seconds',
                                                   'transfer_buffer_size_for_parallel_transfer_in_megabytes',
                                                   'transfer_chunk_size_for_parallel_transfer_in_megabytes'],
                                      'type': 'object'},
                'catalog_provider_hosts': {'items': {'type': 'string'},
                                           'minItems': 1,
                                           'type': 'array',
                                           'uniqueItems': True},
                'catalog_service_role': {'enum': ['consumer', 'provider']},
                'client_api_allowlist_policy': {'enum': ['disabled',
                                                         'enforce']},
                'controlled_user_connection_list': {'properties': {'control_type': {'enum': ['denylist',
                                                                                             'allowlist']},
                                                                   'users': {'items': {'type': 'string'},
                                                                             'type': 'array',
                                                                             'uniqueItems': True}},
                                                    'type': 'object'},
                'default_dir_mode': {'type': 'string'},
                'default_file_mode': {'type': 'string'},
                'default_hash_scheme': {'type': 'string'},
                'environment_variables': {'additionalProperties': {'type': 'string'},
                                          'type': 'object'},
                'federation': {'items': {'properties': {'catalog_provider_hosts': {'items': {'type': 'string'},
                                                                                   'minItems': 1,
                                                                                   'type': 'array',
                                                                                   'uniqueItems': True},
                                                        'negotiation_key': {'maxLength': 32,
                                                                            'minLength': 32,
                                                                            'pattern': '^[A-Za-z0-9_]+$',
                                                                            'type': 'string'},
                                                        'zone_key': {'maxLength': 49,
                                                                     'pattern': '^[A-Za-z0-9_]+$',
                                                                     'type': 'string'},
                                                        'zone_name': {'maxLength': 63,
                                                                      'pattern': '^[A-Za-z0-9_\\.]+$',
                                                                      'type': 'string'},
                                                        'zone_port': {'type': 'integer'}},
                                         'required': ['catalog_provider_hosts',
                                                      'negotiation_key',
                                                      'zone_key',
                                                      'zone_name'],
                                         'type': 'object'},
                               'type': 'array'},
                'host_access_control': {'$ref': 'host_access_control.json'},
                'host_resolution': {'$ref': 'host_resolution.json'},
                'log_level': {'items': {'properties': {'agent': {'enum': ['trace',
                                                                          'debug',
                                                                          'info',
                                                                          'warn',
                                                                          'error',
                                                                          'critical'],
                                                                 'maxItems': 1},
                                                       'agent_factory': {'enum': ['trace',
                                                                                  'debug',
                                                                                  'info',
                                                                                  'warn',
                                                                                  'error',
                                                                                  'critical'],
                                                                         'maxItems': 1},
                                                       'api': {'enum': ['trace',
                                                                        'debug',
                                                                        'info',
                                                                        'warn',
                                                                        'error',
                                                                        'critical'],
                                                               'maxItems': 1},
                                                       'authentication': {'enum': ['trace',
                                                                                   'debug',
                                                                                   'info',
                                                                                   'warn',
                                                                                   'error',
                                                                                   'critical'],
                                                                          'maxItems': 1},
                                                       'database': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'delay_server': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'legacy': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1},
                                                       'microservice': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'network': {'enum': ['trace',
                                                                            'debug',
                                                                            'info',
                                                                            'warn',
                                                                            'error',
                                                                            'critical'],
                                                                   'maxItems': 1},
                                                       'resource': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'rule_engine': {'enum': ['trace',
                                                                                'debug',
                                                                                'info',
                                                                                'warn',
                                                                                'error',
                                                                                'critical'],
                                                                       'maxItems': 1},
                                                       'server': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1}}},
                              'type': 'object'},
                'match_hash_policy': {'type': 'string'},
                'maximum_connections': {'minimum': 1, 'type': 'integer'},
                'negotiation_key': {'maxLength': 32,
                                    'minLength': 32,
                                    'pattern': '^[A-Za-z0-9_]+$',
                                    'type': 'string'},
                'plugin_configuration': {'properties': {'authentication': {'properties': {},
                                                                           'type': 'object'},
                                                        'database': {'additionalProperties': {'$ref': 'database_config.json'},
                                                                     'maxProperties': 1,
                                                                     'minProperties': 1,
                                                                     'type': 'object'},
                                                        'network': {'properties': {},
                                                                    'type': 'object'},
                                                        'resource': {'properties': {},
                                                                     'type': 'object'},
                                                        'rule_engines': {'items': {'$ref': 'rule_engine.json'},
                                                                         'minItems': 1,
                                                                         'type': 'array'}},
                                         'required': ['authentication',
                                                      'network',
                                                      'resource',
                                                      'rule_engines'],
                                         'type': 'object'},
                'schema_name': {'type': 'string'},
                'schema_validation_base_uri': {'type': 'string'},
                'schema_version': {'type': 'string'},
                'server_control_plane_encryption_algorithm': {'type': 'string'},
                'server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'server_control_plane_key': {'maxLength': 32,
                                             'minLength': 32,
                                             'type': 'string'},
                'server_control_plane_port': {'type': 'integer'},
                'server_control_plane_timeout_milliseconds': {'type': 'integer'},
                'server_port_range_end': {'type': 'integer'},
                'server_port_range_start': {'type': 'integer'},
                'zone_auth_scheme': {'type': 'string'},
                'zone_key': {'maxLength': 49,
                             'pattern': '^[A-Za-z0-9_]+$',
                             'type': 'string'},
                'zone_name': {'maxLength': 63,
                              'pattern': '^[A-Za-z0-9_\\.]+$',
                              'type': 'string'},
                'zone_port': {'type': 'integer'},
                'zone_user': {'type': 'string'}},
 'required': ['advanced_settings',
              'catalog_provider_hosts',
              'catalog_service_role',
              'client_api_allowlist_policy',
              'controlled_user_connection_list',
              'default_dir_mode',
              'default_file_mode',
              'default_hash_scheme',
              'environment_variables',
              'federation',
              'host_access_control',
              'host_resolution',
              'log_level',
              'match_hash_policy',
              'negotiation_key',
              'plugin_configuration',
              'rule_engine_namespaces',
              'schema_name',
              'schema_validation_base_uri',
              'schema_version',
              'server_control_plane_encryption_algorithm',
              'server_control_plane_encryption_num_hash_rounds',
              'server_control_plane_key',
              'server_control_plane_port',
              'server_control_plane_timeout_milliseconds',
              'server_port_range_end',
              'server_port_range_start',
              'zone_auth_scheme',
              'zone_key',
              'zone_name',
              'zone_port',
              'zone_user'],
 'type': 'object'}
2024-08-05T21:30:01.273Z -    INFO -             json_validation.py:  74 - Validating [/etc/irods/server_config.json]... Success
2024-08-05T21:30:01.273Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/version.json against file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:01.273Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:01.273Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:01.273Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/version.json against json schema:
2024-08-05T21:30:01.274Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/version.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'catalog_schema_version': {'type': 'integer'},
                'commit_id': {'pattern': '^[0-9a-f]{40}$', 'type': 'string'},
                'installation_time': {'format': 'date-time', 'type': 'string'},
                'irods_version': {'type': 'string'},
                'previous_version': {'oneOf': [{'$ref': '#'},
                                               {'properties': {'catalog_schema_version': {'type': 'integer'},
                                                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                                                             'type': 'string'},
                                                               'configuration_schema_version': {'type': 'integer'},
                                                               'installation_time': {'format': 'date-time',
                                                                                     'type': 'string'},
                                                               'irods_version': {'type': 'string'},
                                                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                                                'required': ['catalog_schema_version',
                                                             'commit_id',
                                                             'configuration_schema_version',
                                                             'irods_version'],
                                                'type': 'object'}]},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['catalog_schema_version',
              'commit_id',
              'irods_version',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:01.274Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/version.json]... Success
2024-08-05T21:30:01.274Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/.irods/irods_environment.json against file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:01.274Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:01.274Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:01.274Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/.irods/irods_environment.json against json schema:
2024-08-05T21:30:01.275Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'allOf': [{'$ref': 'client_environment.json'}],
 'properties': {'irods_authentication_file': {'type': 'string'},
                'irods_authentication_scheme': {'type': 'string'},
                'irods_client_server_negotiation': {'enum': ['request_server_negotiation',
                                                             'off']},
                'irods_client_server_policy': {'enum': ['CS_NEG_REFUSE',
                                                        'CS_NEG_REQUIRE',
                                                        'CS_NEG_DONT_CARE']},
                'irods_connection_pool_refresh_time_in_seconds': {'type': 'integer'},
                'irods_cwd': {'type': 'string'},
                'irods_debug': {'type': 'string'},
                'irods_default_hash_scheme': {'type': 'string'},
                'irods_default_number_of_transfer_threads': {'type': 'integer'},
                'irods_default_resource': {'type': 'string'},
                'irods_encryption_algorithm': {'type': 'string'},
                'irods_encryption_key_size': {'type': 'integer'},
                'irods_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_encryption_salt_size': {'type': 'integer'},
                'irods_gsi_server_dn': {'type': 'string'},
                'irods_home': {'type': 'string'},
                'irods_log_level': {'type': 'integer'},
                'irods_match_hash_policy': {'type': 'string'},
                'irods_maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                'irods_plugins_home': {'type': 'string'},
                'irods_server_control_plane_encryption_algorithm': {'type': 'string'},
                'irods_server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_server_control_plane_key': {'type': 'string'},
                'irods_server_control_plane_port': {'type': 'integer'},
                'irods_ssl_ca_certificate_file': {'type': 'string'},
                'irods_ssl_ca_certificate_path': {'type': 'string'},
                'irods_ssl_certificate_chain_file': {'type': 'string'},
                'irods_ssl_certificate_key_file': {'type': 'string'},
                'irods_ssl_dh_params_file': {'type': 'string'},
                'irods_ssl_verify_server': {'enum': ['cert',
                                                     'hostname',
                                                     'none']},
                'irods_tcp_keepalive_intvl_in_seconds': {'type': 'integer'},
                'irods_tcp_keepalive_probes': {'type': 'integer'},
                'irods_tcp_keepalive_time_in_seconds': {'type': 'integer'},
                'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['irods_client_server_negotiation',
              'irods_client_server_policy',
              'irods_connection_pool_refresh_time_in_seconds',
              'irods_cwd',
              'irods_default_hash_scheme',
              'irods_default_number_of_transfer_threads',
              'irods_default_resource',
              'irods_encryption_algorithm',
              'irods_encryption_key_size',
              'irods_encryption_num_hash_rounds',
              'irods_encryption_salt_size',
              'irods_home',
              'irods_match_hash_policy',
              'irods_maximum_size_for_single_buffer_in_megabytes',
              'irods_server_control_plane_encryption_algorithm',
              'irods_server_control_plane_encryption_num_hash_rounds',
              'irods_server_control_plane_key',
              'irods_server_control_plane_port',
              'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:01.276Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/.irods/irods_environment.json]... Success
2024-08-05T21:30:01.276Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:01.276Z -   DEBUG -                  controller.py: 103 - Attempting to bind socket 1247
2024-08-05T21:30:01.277Z -   DEBUG -                  controller.py: 110 - Socket 1247 bound and released successfully.
2024-08-05T21:30:01.278Z -   DEBUG -          database_interface.py:  37 - Syncing .odbc.ini file...
2024-08-05T21:30:01.279Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:30:01.814Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=c5c852825805
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:30:01.815Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:30:02.067Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=c5c852825805
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:30:02.089Z -    INFO -          database_interface.py:  40 - Ensuring catalog schema is up-to-date...
2024-08-05T21:30:02.089Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:30:02.092Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 11
2024-08-05T21:30:02.092Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:30:02.092Z -    INFO -          database_interface.py:  44 - Catalog schema is up-to-date.
2024-08-05T21:30:02.093Z -    INFO -                  controller.py: 133 - Starting iRODS server ...
2024-08-05T21:30:02.093Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsServer'] with options:
{'cwd': '/usr/sbin',
 'env': 'HIDDEN',
 'shell': False,
 'stderr': -1,
 'stdout': -1}
2024-08-05T21:30:02.133Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/irodsServer'] returned with code 0.
2024-08-05T21:30:02.134Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #1
2024-08-05T21:30:03.134Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #2
2024-08-05T21:30:03.135Z -   DEBUG -                  controller.py: 151 - Successfully connected to port 1247.
2024-08-05T21:30:03.135Z -    INFO -                  controller.py: 164 - Success
2024-08-05T21:30:17.140Z -   DEBUG -                  controller.py: 189 - Calling stop on IrodsController
2024-08-05T21:30:17.140Z -    INFO -                  controller.py: 190 - Stopping iRODS server...
2024-08-05T21:30:18.653Z -    INFO -                  controller.py: 224 - Success
2024-08-05T21:30:19.352Z -   DEBUG -                  controller.py:  62 - Calling start on IrodsController
2024-08-05T21:30:19.352Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:30:19.352Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:19.353Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/.irods/irods_environment.json into dictionary
2024-08-05T21:30:19.353Z -   DEBUG -               configuration.py: 197 - Attempting to construct schema URI...
2024-08-05T21:30:19.353Z -   DEBUG -               configuration.py: 208 - Successfully constructed schema URI.
2024-08-05T21:30:19.353Z -   DEBUG -               configuration.py: 278 - Attempting to validate /etc/irods/server_config.json against file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:19.353Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:19.353Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:19.353Z -   DEBUG -             json_validation.py:  53 - Validating /etc/irods/server_config.json against json schema:
2024-08-05T21:30:19.356Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/server_config.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'advanced_settings': {'properties': {'agent_factory_watcher_sleep_time_in_seconds': {'type': 'integer'},
                                                     'default_number_of_transfer_threads': {'type': 'integer'},
                                                     'default_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'delay_rule_executors': {'items': {'type': 'string'},
                                                                              'type': 'array',
                                                                              'uniqueItems': True},
                                                     'delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'dns_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                  'eviction_age_in_seconds': {'type': 'integer'},
                                                                                  'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                   'type': 'object'},
                                                     'hostname_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                       'eviction_age_in_seconds': {'type': 'integer'},
                                                                                       'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                        'type': 'object'},
                                                     'maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                                                     'maximum_size_of_delay_queue_in_bytes': {'type': 'integer'},
                                                     'maximum_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'migrate_delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'number_of_concurrent_delay_rule_executors': {'type': 'integer'},
                                                     'stacktrace_file_processor_sleep_time_in_seconds': {'type': 'integer'},
                                                     'transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                                                     'transfer_chunk_size_for_parallel_transfer_in_megabytes': {'type': 'integer'}},
                                      'required': ['default_number_of_transfer_threads',
                                                   'default_temporary_password_lifetime_in_seconds',
                                                   'maximum_size_for_single_buffer_in_megabytes',
                                                   'maximum_temporary_password_lifetime_in_seconds',
                                                   'transfer_buffer_size_for_parallel_transfer_in_megabytes',
                                                   'transfer_chunk_size_for_parallel_transfer_in_megabytes'],
                                      'type': 'object'},
                'catalog_provider_hosts': {'items': {'type': 'string'},
                                           'minItems': 1,
                                           'type': 'array',
                                           'uniqueItems': True},
                'catalog_service_role': {'enum': ['consumer', 'provider']},
                'client_api_allowlist_policy': {'enum': ['disabled',
                                                         'enforce']},
                'controlled_user_connection_list': {'properties': {'control_type': {'enum': ['denylist',
                                                                                             'allowlist']},
                                                                   'users': {'items': {'type': 'string'},
                                                                             'type': 'array',
                                                                             'uniqueItems': True}},
                                                    'type': 'object'},
                'default_dir_mode': {'type': 'string'},
                'default_file_mode': {'type': 'string'},
                'default_hash_scheme': {'type': 'string'},
                'environment_variables': {'additionalProperties': {'type': 'string'},
                                          'type': 'object'},
                'federation': {'items': {'properties': {'catalog_provider_hosts': {'items': {'type': 'string'},
                                                                                   'minItems': 1,
                                                                                   'type': 'array',
                                                                                   'uniqueItems': True},
                                                        'negotiation_key': {'maxLength': 32,
                                                                            'minLength': 32,
                                                                            'pattern': '^[A-Za-z0-9_]+$',
                                                                            'type': 'string'},
                                                        'zone_key': {'maxLength': 49,
                                                                     'pattern': '^[A-Za-z0-9_]+$',
                                                                     'type': 'string'},
                                                        'zone_name': {'maxLength': 63,
                                                                      'pattern': '^[A-Za-z0-9_\\.]+$',
                                                                      'type': 'string'},
                                                        'zone_port': {'type': 'integer'}},
                                         'required': ['catalog_provider_hosts',
                                                      'negotiation_key',
                                                      'zone_key',
                                                      'zone_name'],
                                         'type': 'object'},
                               'type': 'array'},
                'host_access_control': {'$ref': 'host_access_control.json'},
                'host_resolution': {'$ref': 'host_resolution.json'},
                'log_level': {'items': {'properties': {'agent': {'enum': ['trace',
                                                                          'debug',
                                                                          'info',
                                                                          'warn',
                                                                          'error',
                                                                          'critical'],
                                                                 'maxItems': 1},
                                                       'agent_factory': {'enum': ['trace',
                                                                                  'debug',
                                                                                  'info',
                                                                                  'warn',
                                                                                  'error',
                                                                                  'critical'],
                                                                         'maxItems': 1},
                                                       'api': {'enum': ['trace',
                                                                        'debug',
                                                                        'info',
                                                                        'warn',
                                                                        'error',
                                                                        'critical'],
                                                               'maxItems': 1},
                                                       'authentication': {'enum': ['trace',
                                                                                   'debug',
                                                                                   'info',
                                                                                   'warn',
                                                                                   'error',
                                                                                   'critical'],
                                                                          'maxItems': 1},
                                                       'database': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'delay_server': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'legacy': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1},
                                                       'microservice': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'network': {'enum': ['trace',
                                                                            'debug',
                                                                            'info',
                                                                            'warn',
                                                                            'error',
                                                                            'critical'],
                                                                   'maxItems': 1},
                                                       'resource': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'rule_engine': {'enum': ['trace',
                                                                                'debug',
                                                                                'info',
                                                                                'warn',
                                                                                'error',
                                                                                'critical'],
                                                                       'maxItems': 1},
                                                       'server': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1}}},
                              'type': 'object'},
                'match_hash_policy': {'type': 'string'},
                'maximum_connections': {'minimum': 1, 'type': 'integer'},
                'negotiation_key': {'maxLength': 32,
                                    'minLength': 32,
                                    'pattern': '^[A-Za-z0-9_]+$',
                                    'type': 'string'},
                'plugin_configuration': {'properties': {'authentication': {'properties': {},
                                                                           'type': 'object'},
                                                        'database': {'additionalProperties': {'$ref': 'database_config.json'},
                                                                     'maxProperties': 1,
                                                                     'minProperties': 1,
                                                                     'type': 'object'},
                                                        'network': {'properties': {},
                                                                    'type': 'object'},
                                                        'resource': {'properties': {},
                                                                     'type': 'object'},
                                                        'rule_engines': {'items': {'$ref': 'rule_engine.json'},
                                                                         'minItems': 1,
                                                                         'type': 'array'}},
                                         'required': ['authentication',
                                                      'network',
                                                      'resource',
                                                      'rule_engines'],
                                         'type': 'object'},
                'schema_name': {'type': 'string'},
                'schema_validation_base_uri': {'type': 'string'},
                'schema_version': {'type': 'string'},
                'server_control_plane_encryption_algorithm': {'type': 'string'},
                'server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'server_control_plane_key': {'maxLength': 32,
                                             'minLength': 32,
                                             'type': 'string'},
                'server_control_plane_port': {'type': 'integer'},
                'server_control_plane_timeout_milliseconds': {'type': 'integer'},
                'server_port_range_end': {'type': 'integer'},
                'server_port_range_start': {'type': 'integer'},
                'zone_auth_scheme': {'type': 'string'},
                'zone_key': {'maxLength': 49,
                             'pattern': '^[A-Za-z0-9_]+$',
                             'type': 'string'},
                'zone_name': {'maxLength': 63,
                              'pattern': '^[A-Za-z0-9_\\.]+$',
                              'type': 'string'},
                'zone_port': {'type': 'integer'},
                'zone_user': {'type': 'string'}},
 'required': ['advanced_settings',
              'catalog_provider_hosts',
              'catalog_service_role',
              'client_api_allowlist_policy',
              'controlled_user_connection_list',
              'default_dir_mode',
              'default_file_mode',
              'default_hash_scheme',
              'environment_variables',
              'federation',
              'host_access_control',
              'host_resolution',
              'log_level',
              'match_hash_policy',
              'negotiation_key',
              'plugin_configuration',
              'rule_engine_namespaces',
              'schema_name',
              'schema_validation_base_uri',
              'schema_version',
              'server_control_plane_encryption_algorithm',
              'server_control_plane_encryption_num_hash_rounds',
              'server_control_plane_key',
              'server_control_plane_port',
              'server_control_plane_timeout_milliseconds',
              'server_port_range_end',
              'server_port_range_start',
              'zone_auth_scheme',
              'zone_key',
              'zone_name',
              'zone_port',
              'zone_user'],
 'type': 'object'}
2024-08-05T21:30:19.362Z -    INFO -             json_validation.py:  74 - Validating [/etc/irods/server_config.json]... Success
2024-08-05T21:30:19.362Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/version.json against file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:19.362Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:19.362Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:19.362Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/version.json against json schema:
2024-08-05T21:30:19.363Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/version.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'catalog_schema_version': {'type': 'integer'},
                'commit_id': {'pattern': '^[0-9a-f]{40}$', 'type': 'string'},
                'installation_time': {'format': 'date-time', 'type': 'string'},
                'irods_version': {'type': 'string'},
                'previous_version': {'oneOf': [{'$ref': '#'},
                                               {'properties': {'catalog_schema_version': {'type': 'integer'},
                                                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                                                             'type': 'string'},
                                                               'configuration_schema_version': {'type': 'integer'},
                                                               'installation_time': {'format': 'date-time',
                                                                                     'type': 'string'},
                                                               'irods_version': {'type': 'string'},
                                                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                                                'required': ['catalog_schema_version',
                                                             'commit_id',
                                                             'configuration_schema_version',
                                                             'irods_version'],
                                                'type': 'object'}]},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['catalog_schema_version',
              'commit_id',
              'irods_version',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:19.363Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/version.json]... Success
2024-08-05T21:30:19.364Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/.irods/irods_environment.json against file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:19.364Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:19.364Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:19.364Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/.irods/irods_environment.json against json schema:
2024-08-05T21:30:19.364Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'allOf': [{'$ref': 'client_environment.json'}],
 'properties': {'irods_authentication_file': {'type': 'string'},
                'irods_authentication_scheme': {'type': 'string'},
                'irods_client_server_negotiation': {'enum': ['request_server_negotiation',
                                                             'off']},
                'irods_client_server_policy': {'enum': ['CS_NEG_REFUSE',
                                                        'CS_NEG_REQUIRE',
                                                        'CS_NEG_DONT_CARE']},
                'irods_connection_pool_refresh_time_in_seconds': {'type': 'integer'},
                'irods_cwd': {'type': 'string'},
                'irods_debug': {'type': 'string'},
                'irods_default_hash_scheme': {'type': 'string'},
                'irods_default_number_of_transfer_threads': {'type': 'integer'},
                'irods_default_resource': {'type': 'string'},
                'irods_encryption_algorithm': {'type': 'string'},
                'irods_encryption_key_size': {'type': 'integer'},
                'irods_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_encryption_salt_size': {'type': 'integer'},
                'irods_gsi_server_dn': {'type': 'string'},
                'irods_home': {'type': 'string'},
                'irods_log_level': {'type': 'integer'},
                'irods_match_hash_policy': {'type': 'string'},
                'irods_maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                'irods_plugins_home': {'type': 'string'},
                'irods_server_control_plane_encryption_algorithm': {'type': 'string'},
                'irods_server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_server_control_plane_key': {'type': 'string'},
                'irods_server_control_plane_port': {'type': 'integer'},
                'irods_ssl_ca_certificate_file': {'type': 'string'},
                'irods_ssl_ca_certificate_path': {'type': 'string'},
                'irods_ssl_certificate_chain_file': {'type': 'string'},
                'irods_ssl_certificate_key_file': {'type': 'string'},
                'irods_ssl_dh_params_file': {'type': 'string'},
                'irods_ssl_verify_server': {'enum': ['cert',
                                                     'hostname',
                                                     'none']},
                'irods_tcp_keepalive_intvl_in_seconds': {'type': 'integer'},
                'irods_tcp_keepalive_probes': {'type': 'integer'},
                'irods_tcp_keepalive_time_in_seconds': {'type': 'integer'},
                'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['irods_client_server_negotiation',
              'irods_client_server_policy',
              'irods_connection_pool_refresh_time_in_seconds',
              'irods_cwd',
              'irods_default_hash_scheme',
              'irods_default_number_of_transfer_threads',
              'irods_default_resource',
              'irods_encryption_algorithm',
              'irods_encryption_key_size',
              'irods_encryption_num_hash_rounds',
              'irods_encryption_salt_size',
              'irods_home',
              'irods_match_hash_policy',
              'irods_maximum_size_for_single_buffer_in_megabytes',
              'irods_server_control_plane_encryption_algorithm',
              'irods_server_control_plane_encryption_num_hash_rounds',
              'irods_server_control_plane_key',
              'irods_server_control_plane_port',
              'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:19.365Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/.irods/irods_environment.json]... Success
2024-08-05T21:30:19.366Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:19.366Z -   DEBUG -                  controller.py: 103 - Attempting to bind socket 1247
2024-08-05T21:30:19.366Z -   DEBUG -                  controller.py: 110 - Socket 1247 bound and released successfully.
2024-08-05T21:30:19.368Z -   DEBUG -          database_interface.py:  37 - Syncing .odbc.ini file...
2024-08-05T21:30:19.368Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:30:19.759Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=c5c852825805
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:30:19.760Z -   DEBUG -                     execute.py:  50 - Calling ['odbcinst', '-i', '-s', '-h', '-r'] with options:
{'env': 'HIDDEN', 'shell': False, 'stderr': -1, 'stdin': -1, 'stdout': -1}
2024-08-05T21:30:19.990Z -   DEBUG -                     execute.py:  35 - Command ['odbcinst', '-i', '-s', '-h', '-r'] returned with code 0.
stdin:
  [iRODS Catalog]
  Driver=PostgreSQL ANSI
  Description=iRODS Catalog
  Trace=No
  Debug=0
  CommLog=0
  TraceFile=
  Database=ICAT
  Servername=c5c852825805
  Port=5432
  ReadOnly=No
  Ksqo=0
  RowVersioning=No
  ShowSystemTables=No
  ShowOidColumn=No
  FakeOidIndex=No
  ConnSettings=
stdout:
  odbcinst: Sections and Entries from stdin have been added to ODBC.INI
2024-08-05T21:30:20.009Z -    INFO -          database_interface.py:  40 - Ensuring catalog schema is up-to-date...
2024-08-05T21:30:20.009Z -   DEBUG -            database_connect.py: 242 - Executing SQL statement:
select option_value from R_GRID_CONFIGURATION where namespace='database' and option_name='schema_version';
with the following parameters:
()
2024-08-05T21:30:20.015Z -   DEBUG -            database_connect.py: 305 - Schema_version in database: 11
2024-08-05T21:30:20.015Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:30:20.016Z -    INFO -          database_interface.py:  44 - Catalog schema is up-to-date.
2024-08-05T21:30:20.016Z -    INFO -                  controller.py: 133 - Starting iRODS server ...
2024-08-05T21:30:20.017Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsServer'] with options:
{'cwd': '/usr/sbin',
 'env': 'HIDDEN',
 'shell': False,
 'stderr': -1,
 'stdout': -1}
2024-08-05T21:30:20.066Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/irodsServer'] returned with code 0.
2024-08-05T21:30:20.066Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #1
2024-08-05T21:30:21.068Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #2
2024-08-05T21:30:21.068Z -   DEBUG -                  controller.py: 151 - Successfully connected to port 1247.
2024-08-05T21:30:21.069Z -    INFO -                  controller.py: 164 - Success
