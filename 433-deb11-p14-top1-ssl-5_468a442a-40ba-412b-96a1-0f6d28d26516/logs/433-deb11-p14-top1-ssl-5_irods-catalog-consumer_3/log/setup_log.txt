2024-08-05T21:30:03.644Z - WARNING -                 setup_irods.py: 192 - Warning: Hostname `8577fa903d89` should be a fully qualified domain name.
2024-08-05T21:30:03.645Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/hostname_resolves_to_local_address', '8577fa903d89'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:03.667Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/hostname_resolves_to_local_address', '8577fa903d89'] returned with code 0.
stdout:
  yes
2024-08-05T21:30:03.668Z -    INFO -               configuration.py: 297 - Updating /var/lib/irods/version.json...
2024-08-05T21:30:03.669Z -    INFO -                 setup_irods.py: 258 - The iRODS service account name needs to be defined.
2024-08-05T21:30:03.669Z -   DEBUG -                         lib.py: 427 - iRODS user [irods]: 
2024-08-05T21:30:03.669Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:30:03.669Z -   DEBUG -                         lib.py: 427 - iRODS group [irods]: 
2024-08-05T21:30:03.669Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:30:03.669Z -    INFO -                 setup_irods.py: 269 - 
+--------------------------------+
| Setting up the service account |
+--------------------------------+

2024-08-05T21:30:03.669Z -    INFO -                 setup_irods.py: 272 - Creating Service Group: irods
2024-08-05T21:30:03.670Z -   DEBUG -                     execute.py:  50 - Calling ['groupadd', '-r', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:04.223Z -   DEBUG -                     execute.py:  35 - Command ['groupadd', '-r', 'irods'] returned with code 0.
2024-08-05T21:30:04.224Z -   DEBUG -                     execute.py:  50 - Calling ['id', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:04.230Z -   DEBUG -                     execute.py:  35 - Command ['id', 'irods'] returned with code 1.
stderr:
  id: ‘irods’: no such user
2024-08-05T21:30:04.239Z -    INFO -                 setup_irods.py: 283 - Creating Service Account: irods
2024-08-05T21:30:04.240Z -   DEBUG -                     execute.py:  50 - Calling ['useradd', '-r', '-d', '/var/lib/irods', '-M', '-s', '/bin/bash', '-g', 'irods', '-c', 'iRODS Administrator', '-p', '!', 'irods'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:04.919Z -   DEBUG -                     execute.py:  35 - Command ['useradd', '-r', '-d', '/var/lib/irods', '-M', '-s', '/bin/bash', '-g', 'irods', '-c', 'iRODS Administrator', '-p', '!', 'irods'] returned with code 0.
2024-08-05T21:30:04.920Z -    INFO -                 setup_irods.py: 301 - Setting owner of /var/lib/irods to irods:irods
2024-08-05T21:30:04.954Z -    INFO -                 setup_irods.py: 312 - Setting owner of /etc/irods to irods:irods
2024-08-05T21:30:04.955Z -   DEBUG -                 setup_irods.py: 323 - Setting uid bit on /var/lib/irods/clients/bin/genOSAuth
2024-08-05T21:30:04.955Z -   DEBUG -                     execute.py:  50 - Calling ['su', '-', 'irods', '-c', 'python3 -c "from __future__ import print_function; import os; import json; print(json.dumps(dict(os.environ)))"'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:04.994Z -   DEBUG -                     execute.py:  35 - Command ['su', '-', 'irods', '-c', 'python3 -c "from __future__ import print_function; import os; import json; print(json.dumps(dict(os.environ)))"'] returned with code 0.
stdout:
  {"SHELL": "/bin/bash", "PWD": "/var/lib/irods", "LOGNAME": "irods", "HOME": "/var/lib/irods", "USER": "irods", "SHLVL": "0", "PATH": "/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games", "MAIL": "/var/mail/irods", "_": "/usr/bin/python3", "LC_CTYPE": "C.UTF-8"}
2024-08-05T21:30:04.995Z -   DEBUG -               configuration.py: 435 - /etc/irods/server_config.json does not exist, copying from template file /var/lib/irods/packaging/server_config.json.template
2024-08-05T21:30:04.995Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:04.996Z -   DEBUG -                         lib.py: 427 - iRODS server's role:
1. provider
2. consumer
Please select a number or choose 0 to enter a new value [1]: 
2024-08-05T21:30:04.996Z -   DEBUG -                         lib.py: 432 - User input: 2
2024-08-05T21:30:04.996Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:30:05.001Z -    INFO -                 setup_irods.py: 216 - 
+---------------------------+
| Determining local storage |
+---------------------------+

2024-08-05T21:30:05.001Z -   DEBUG -                         lib.py: 427 - Local storage on this server [yes]: 
2024-08-05T21:30:05.001Z -   DEBUG -                         lib.py: 432 - User input: y
2024-08-05T21:30:05.001Z -    INFO -                 setup_irods.py: 223 - True
2024-08-05T21:30:05.001Z -    INFO -                 setup_irods.py: 231 - 
+----------------------------------+
| Setting up default resource name |
+----------------------------------+

2024-08-05T21:30:05.001Z -   DEBUG -                         lib.py: 427 - Default resource [8577fa903d89Resource]: 
2024-08-05T21:30:05.001Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:30:05.001Z -    INFO -                 setup_irods.py: 246 - 
+--------------------------+
| Setting up default vault |
+--------------------------+

2024-08-05T21:30:05.001Z -   DEBUG -                         lib.py: 427 - iRODS Vault directory [/var/lib/irods/Vault]: 
2024-08-05T21:30:05.002Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:30:05.002Z -    INFO -                 setup_irods.py: 355 - 
+--------------------------------+
| Configuring the server options |
+--------------------------------+

2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 427 - iRODS server's zone name [tempZone]: 
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 432 - User input: tempZone
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 427 - iRODS catalog (ICAT) host: 
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 432 - User input: 226b6894d9f2
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 427 - iRODS server's port [1247]: 
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 432 - User input: 1247
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 427 - iRODS port range (begin) [20000]: 
2024-08-05T21:30:05.005Z -   DEBUG -                         lib.py: 432 - User input: 20000
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - iRODS port range (end) [20199]: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 432 - User input: 20199
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - Control Plane port [1248]: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 432 - User input: 1248
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - Schema Validation Base URI (or off) [file:///var/lib/irods/configuration_schemas]: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 432 - User input: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - iRODS server's administrator username [rods]: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 432 - User input: rods
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - 
-------------------------------------------
Zone name:                  tempZone
iRODS catalog host:         226b6894d9f2
iRODS server port:          1247
iRODS port range (begin):   20000
iRODS port range (end):     20199
Control plane port:         1248
Schema validation base URI: file:///var/lib/irods/configuration_schemas
iRODS server administrator: rods
-------------------------------------------

Please confirm [yes]: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 432 - User input: y
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - iRODS server's zone key: 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - iRODS server's negotiation key (32 characters): 
2024-08-05T21:30:05.006Z -   DEBUG -                         lib.py: 427 - Control Plane key (32 characters): 
2024-08-05T21:30:05.007Z -    INFO -               configuration.py: 297 - Updating /etc/irods/server_config.json...
2024-08-05T21:30:05.012Z -    INFO -                 setup_irods.py: 451 - 
+-----------------------------------+
| Setting up the client environment |
+-----------------------------------+

2024-08-05T21:30:05.012Z -   DEBUG -                         lib.py: 427 - iRODS server's administrator password: 
2024-08-05T21:30:05.013Z -   DEBUG -               configuration.py: 226 - Writing password file /var/lib/irods/.irods/.irodsA
2024-08-05T21:30:05.015Z -    INFO -               configuration.py: 297 - Updating /var/lib/irods/.irods/irods_environment.json...
2024-08-05T21:30:05.028Z -    INFO -                 setup_irods.py: 134 - 
+-------------------+
| Starting iRODS... |
+-------------------+

2024-08-05T21:30:05.028Z -   DEBUG -                  controller.py:  62 - Calling start on IrodsController
2024-08-05T21:30:05.029Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/version.json into dictionary
2024-08-05T21:30:05.029Z -   DEBUG -               configuration.py: 437 - Loading /var/lib/irods/.irods/irods_environment.json into dictionary
2024-08-05T21:30:05.030Z -   DEBUG -               configuration.py: 197 - Attempting to construct schema URI...
2024-08-05T21:30:05.030Z -   DEBUG -               configuration.py: 208 - Successfully constructed schema URI.
2024-08-05T21:30:05.030Z -   DEBUG -               configuration.py: 278 - Attempting to validate /etc/irods/server_config.json against file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:05.030Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:05.030Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/server_config.json
2024-08-05T21:30:05.031Z -   DEBUG -             json_validation.py:  53 - Validating /etc/irods/server_config.json against json schema:
2024-08-05T21:30:05.040Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/server_config.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'advanced_settings': {'properties': {'agent_factory_watcher_sleep_time_in_seconds': {'type': 'integer'},
                                                     'default_number_of_transfer_threads': {'type': 'integer'},
                                                     'default_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'delay_rule_executors': {'items': {'type': 'string'},
                                                                              'type': 'array',
                                                                              'uniqueItems': True},
                                                     'delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'dns_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                  'eviction_age_in_seconds': {'type': 'integer'},
                                                                                  'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                   'type': 'object'},
                                                     'hostname_cache': {'properties': {'cache_clearer_sleep_time_in_seconds': {'type': 'integer'},
                                                                                       'eviction_age_in_seconds': {'type': 'integer'},
                                                                                       'shared_memory_size_in_bytes': {'type': 'integer'}},
                                                                        'type': 'object'},
                                                     'maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                                                     'maximum_size_of_delay_queue_in_bytes': {'type': 'integer'},
                                                     'maximum_temporary_password_lifetime_in_seconds': {'type': 'integer'},
                                                     'migrate_delay_server_sleep_time_in_seconds': {'type': 'integer'},
                                                     'number_of_concurrent_delay_rule_executors': {'type': 'integer'},
                                                     'stacktrace_file_processor_sleep_time_in_seconds': {'type': 'integer'},
                                                     'transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                                                     'transfer_chunk_size_for_parallel_transfer_in_megabytes': {'type': 'integer'}},
                                      'required': ['default_number_of_transfer_threads',
                                                   'default_temporary_password_lifetime_in_seconds',
                                                   'maximum_size_for_single_buffer_in_megabytes',
                                                   'maximum_temporary_password_lifetime_in_seconds',
                                                   'transfer_buffer_size_for_parallel_transfer_in_megabytes',
                                                   'transfer_chunk_size_for_parallel_transfer_in_megabytes'],
                                      'type': 'object'},
                'catalog_provider_hosts': {'items': {'type': 'string'},
                                           'minItems': 1,
                                           'type': 'array',
                                           'uniqueItems': True},
                'catalog_service_role': {'enum': ['consumer', 'provider']},
                'client_api_allowlist_policy': {'enum': ['disabled',
                                                         'enforce']},
                'controlled_user_connection_list': {'properties': {'control_type': {'enum': ['denylist',
                                                                                             'allowlist']},
                                                                   'users': {'items': {'type': 'string'},
                                                                             'type': 'array',
                                                                             'uniqueItems': True}},
                                                    'type': 'object'},
                'default_dir_mode': {'type': 'string'},
                'default_file_mode': {'type': 'string'},
                'default_hash_scheme': {'type': 'string'},
                'environment_variables': {'additionalProperties': {'type': 'string'},
                                          'type': 'object'},
                'federation': {'items': {'properties': {'catalog_provider_hosts': {'items': {'type': 'string'},
                                                                                   'minItems': 1,
                                                                                   'type': 'array',
                                                                                   'uniqueItems': True},
                                                        'negotiation_key': {'maxLength': 32,
                                                                            'minLength': 32,
                                                                            'pattern': '^[A-Za-z0-9_]+$',
                                                                            'type': 'string'},
                                                        'zone_key': {'maxLength': 49,
                                                                     'pattern': '^[A-Za-z0-9_]+$',
                                                                     'type': 'string'},
                                                        'zone_name': {'maxLength': 63,
                                                                      'pattern': '^[A-Za-z0-9_\\.]+$',
                                                                      'type': 'string'},
                                                        'zone_port': {'type': 'integer'}},
                                         'required': ['catalog_provider_hosts',
                                                      'negotiation_key',
                                                      'zone_key',
                                                      'zone_name'],
                                         'type': 'object'},
                               'type': 'array'},
                'host_access_control': {'$ref': 'host_access_control.json'},
                'host_resolution': {'$ref': 'host_resolution.json'},
                'log_level': {'items': {'properties': {'agent': {'enum': ['trace',
                                                                          'debug',
                                                                          'info',
                                                                          'warn',
                                                                          'error',
                                                                          'critical'],
                                                                 'maxItems': 1},
                                                       'agent_factory': {'enum': ['trace',
                                                                                  'debug',
                                                                                  'info',
                                                                                  'warn',
                                                                                  'error',
                                                                                  'critical'],
                                                                         'maxItems': 1},
                                                       'api': {'enum': ['trace',
                                                                        'debug',
                                                                        'info',
                                                                        'warn',
                                                                        'error',
                                                                        'critical'],
                                                               'maxItems': 1},
                                                       'authentication': {'enum': ['trace',
                                                                                   'debug',
                                                                                   'info',
                                                                                   'warn',
                                                                                   'error',
                                                                                   'critical'],
                                                                          'maxItems': 1},
                                                       'database': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'delay_server': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'legacy': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1},
                                                       'microservice': {'enum': ['trace',
                                                                                 'debug',
                                                                                 'info',
                                                                                 'warn',
                                                                                 'error',
                                                                                 'critical'],
                                                                        'maxItems': 1},
                                                       'network': {'enum': ['trace',
                                                                            'debug',
                                                                            'info',
                                                                            'warn',
                                                                            'error',
                                                                            'critical'],
                                                                   'maxItems': 1},
                                                       'resource': {'enum': ['trace',
                                                                             'debug',
                                                                             'info',
                                                                             'warn',
                                                                             'error',
                                                                             'critical'],
                                                                    'maxItems': 1},
                                                       'rule_engine': {'enum': ['trace',
                                                                                'debug',
                                                                                'info',
                                                                                'warn',
                                                                                'error',
                                                                                'critical'],
                                                                       'maxItems': 1},
                                                       'server': {'enum': ['trace',
                                                                           'debug',
                                                                           'info',
                                                                           'warn',
                                                                           'error',
                                                                           'critical'],
                                                                  'maxItems': 1}}},
                              'type': 'object'},
                'match_hash_policy': {'type': 'string'},
                'maximum_connections': {'minimum': 1, 'type': 'integer'},
                'negotiation_key': {'maxLength': 32,
                                    'minLength': 32,
                                    'pattern': '^[A-Za-z0-9_]+$',
                                    'type': 'string'},
                'plugin_configuration': {'properties': {'authentication': {'properties': {},
                                                                           'type': 'object'},
                                                        'database': {'additionalProperties': {'$ref': 'database_config.json'},
                                                                     'maxProperties': 1,
                                                                     'minProperties': 1,
                                                                     'type': 'object'},
                                                        'network': {'properties': {},
                                                                    'type': 'object'},
                                                        'resource': {'properties': {},
                                                                     'type': 'object'},
                                                        'rule_engines': {'items': {'$ref': 'rule_engine.json'},
                                                                         'minItems': 1,
                                                                         'type': 'array'}},
                                         'required': ['authentication',
                                                      'network',
                                                      'resource',
                                                      'rule_engines'],
                                         'type': 'object'},
                'schema_name': {'type': 'string'},
                'schema_validation_base_uri': {'type': 'string'},
                'schema_version': {'type': 'string'},
                'server_control_plane_encryption_algorithm': {'type': 'string'},
                'server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'server_control_plane_key': {'maxLength': 32,
                                             'minLength': 32,
                                             'type': 'string'},
                'server_control_plane_port': {'type': 'integer'},
                'server_control_plane_timeout_milliseconds': {'type': 'integer'},
                'server_port_range_end': {'type': 'integer'},
                'server_port_range_start': {'type': 'integer'},
                'zone_auth_scheme': {'type': 'string'},
                'zone_key': {'maxLength': 49,
                             'pattern': '^[A-Za-z0-9_]+$',
                             'type': 'string'},
                'zone_name': {'maxLength': 63,
                              'pattern': '^[A-Za-z0-9_\\.]+$',
                              'type': 'string'},
                'zone_port': {'type': 'integer'},
                'zone_user': {'type': 'string'}},
 'required': ['advanced_settings',
              'catalog_provider_hosts',
              'catalog_service_role',
              'client_api_allowlist_policy',
              'controlled_user_connection_list',
              'default_dir_mode',
              'default_file_mode',
              'default_hash_scheme',
              'environment_variables',
              'federation',
              'host_access_control',
              'host_resolution',
              'log_level',
              'match_hash_policy',
              'negotiation_key',
              'plugin_configuration',
              'rule_engine_namespaces',
              'schema_name',
              'schema_validation_base_uri',
              'schema_version',
              'server_control_plane_encryption_algorithm',
              'server_control_plane_encryption_num_hash_rounds',
              'server_control_plane_key',
              'server_control_plane_port',
              'server_control_plane_timeout_milliseconds',
              'server_port_range_end',
              'server_port_range_start',
              'zone_auth_scheme',
              'zone_key',
              'zone_name',
              'zone_port',
              'zone_user'],
 'type': 'object'}
2024-08-05T21:30:05.054Z -    INFO -             json_validation.py:  74 - Validating [/etc/irods/server_config.json]... Success
2024-08-05T21:30:05.054Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/version.json against file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:05.054Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:05.054Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/version.json
2024-08-05T21:30:05.054Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/version.json against json schema:
2024-08-05T21:30:05.055Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/version.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'properties': {'catalog_schema_version': {'type': 'integer'},
                'commit_id': {'pattern': '^[0-9a-f]{40}$', 'type': 'string'},
                'installation_time': {'format': 'date-time', 'type': 'string'},
                'irods_version': {'type': 'string'},
                'previous_version': {'oneOf': [{'$ref': '#'},
                                               {'properties': {'catalog_schema_version': {'type': 'integer'},
                                                               'commit_id': {'pattern': '^[0-9a-f]{40}$',
                                                                             'type': 'string'},
                                                               'configuration_schema_version': {'type': 'integer'},
                                                               'installation_time': {'format': 'date-time',
                                                                                     'type': 'string'},
                                                               'irods_version': {'type': 'string'},
                                                               'previous_version': {'$ref': '#/properties/previous_version/oneOf/1'}},
                                                'required': ['catalog_schema_version',
                                                             'commit_id',
                                                             'configuration_schema_version',
                                                             'irods_version'],
                                                'type': 'object'}]},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['catalog_schema_version',
              'commit_id',
              'irods_version',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:05.056Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/version.json]... Success
2024-08-05T21:30:05.056Z -   DEBUG -               configuration.py: 278 - Attempting to validate /var/lib/irods/.irods/irods_environment.json against file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:05.056Z -   DEBUG -             json_validation.py:  78 - Loading schema from file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:05.056Z -   DEBUG -             json_validation.py:  80 - Parsed URL: file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json
2024-08-05T21:30:05.056Z -   DEBUG -             json_validation.py:  53 - Validating /var/lib/irods/.irods/irods_environment.json against json schema:
2024-08-05T21:30:05.057Z -   DEBUG -             json_validation.py:  54 - {'$id': 'file:///var/lib/irods/configuration_schemas/v4/service_account_environment.json',
 '$schema': 'https://json-schema.org/draft/2020-12/schema',
 'allOf': [{'$ref': 'client_environment.json'}],
 'properties': {'irods_authentication_file': {'type': 'string'},
                'irods_authentication_scheme': {'type': 'string'},
                'irods_client_server_negotiation': {'enum': ['request_server_negotiation',
                                                             'off']},
                'irods_client_server_policy': {'enum': ['CS_NEG_REFUSE',
                                                        'CS_NEG_REQUIRE',
                                                        'CS_NEG_DONT_CARE']},
                'irods_connection_pool_refresh_time_in_seconds': {'type': 'integer'},
                'irods_cwd': {'type': 'string'},
                'irods_debug': {'type': 'string'},
                'irods_default_hash_scheme': {'type': 'string'},
                'irods_default_number_of_transfer_threads': {'type': 'integer'},
                'irods_default_resource': {'type': 'string'},
                'irods_encryption_algorithm': {'type': 'string'},
                'irods_encryption_key_size': {'type': 'integer'},
                'irods_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_encryption_salt_size': {'type': 'integer'},
                'irods_gsi_server_dn': {'type': 'string'},
                'irods_home': {'type': 'string'},
                'irods_log_level': {'type': 'integer'},
                'irods_match_hash_policy': {'type': 'string'},
                'irods_maximum_size_for_single_buffer_in_megabytes': {'type': 'integer'},
                'irods_plugins_home': {'type': 'string'},
                'irods_server_control_plane_encryption_algorithm': {'type': 'string'},
                'irods_server_control_plane_encryption_num_hash_rounds': {'type': 'integer'},
                'irods_server_control_plane_key': {'type': 'string'},
                'irods_server_control_plane_port': {'type': 'integer'},
                'irods_ssl_ca_certificate_file': {'type': 'string'},
                'irods_ssl_ca_certificate_path': {'type': 'string'},
                'irods_ssl_certificate_chain_file': {'type': 'string'},
                'irods_ssl_certificate_key_file': {'type': 'string'},
                'irods_ssl_dh_params_file': {'type': 'string'},
                'irods_ssl_verify_server': {'enum': ['cert',
                                                     'hostname',
                                                     'none']},
                'irods_tcp_keepalive_intvl_in_seconds': {'type': 'integer'},
                'irods_tcp_keepalive_probes': {'type': 'integer'},
                'irods_tcp_keepalive_time_in_seconds': {'type': 'integer'},
                'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes': {'type': 'integer'},
                'schema_name': {'type': 'string'},
                'schema_version': {'type': 'string'}},
 'required': ['irods_client_server_negotiation',
              'irods_client_server_policy',
              'irods_connection_pool_refresh_time_in_seconds',
              'irods_cwd',
              'irods_default_hash_scheme',
              'irods_default_number_of_transfer_threads',
              'irods_default_resource',
              'irods_encryption_algorithm',
              'irods_encryption_key_size',
              'irods_encryption_num_hash_rounds',
              'irods_encryption_salt_size',
              'irods_home',
              'irods_match_hash_policy',
              'irods_maximum_size_for_single_buffer_in_megabytes',
              'irods_server_control_plane_encryption_algorithm',
              'irods_server_control_plane_encryption_num_hash_rounds',
              'irods_server_control_plane_key',
              'irods_server_control_plane_port',
              'irods_transfer_buffer_size_for_parallel_transfer_in_megabytes',
              'schema_name',
              'schema_version'],
 'type': 'object'}
2024-08-05T21:30:05.059Z -    INFO -             json_validation.py:  74 - Validating [/var/lib/irods/.irods/irods_environment.json]... Success
2024-08-05T21:30:05.060Z -   DEBUG -               configuration.py: 437 - Loading /etc/irods/server_config.json into dictionary
2024-08-05T21:30:05.060Z -   DEBUG -                  controller.py: 103 - Attempting to bind socket 1247
2024-08-05T21:30:05.060Z -   DEBUG -                  controller.py: 110 - Socket 1247 bound and released successfully.
2024-08-05T21:30:05.060Z -    INFO -                  controller.py: 133 - Starting iRODS server ...
2024-08-05T21:30:05.060Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsServer'] with options:
{'cwd': '/usr/sbin',
 'env': 'HIDDEN',
 'shell': False,
 'stderr': -1,
 'stdout': -1}
2024-08-05T21:30:05.117Z -   DEBUG -                     execute.py:  35 - Command ['/usr/sbin/irodsServer'] returned with code 0.
2024-08-05T21:30:05.118Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #1
2024-08-05T21:30:06.120Z -   DEBUG -                  controller.py: 146 - Attempting to connect to iRODS server on port 1247. Attempt #2
2024-08-05T21:30:06.120Z -   DEBUG -                  controller.py: 151 - Successfully connected to port 1247.
2024-08-05T21:30:06.121Z -    INFO -                  controller.py: 164 - Success
2024-08-05T21:30:06.121Z -   DEBUG -                     execute.py:  50 - Calling ['iadmin', 'mkresc', '8577fa903d89Resource', 'unixfilesystem', '8577fa903d89:/var/lib/irods/Vault', ''] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:06.473Z -   DEBUG -                     execute.py:  35 - Command ['iadmin', 'mkresc', '8577fa903d89Resource', 'unixfilesystem', '8577fa903d89:/var/lib/irods/Vault', ''] returned with code 0.
stdout:
  Creating resource:
  Name:		"8577fa903d89Resource"
  Type:		"unixfilesystem"
  Host:		"8577fa903d89"
  Path:		"/var/lib/irods/Vault"
  Context:	""
2024-08-05T21:30:06.479Z -    INFO -                 setup_irods.py: 178 - 
+---------------------------+
| Running Post-Install Test |
+---------------------------+

2024-08-05T21:30:06.480Z -   DEBUG -                     execute.py:  50 - Calling ['/usr/sbin/irodsTestPutGet'] with options:
{'shell': False, 'stderr': -1, 'stdout': -1}
2024-08-05T21:30:07.165Z -   DEBUG -                     execute.py:  35 - Command /usr/sbin/irodsTestPutGet returned with code 0.
2024-08-05T21:30:07.165Z -    INFO -                 setup_irods.py: 183 - Success
2024-08-05T21:30:07.165Z -    INFO -                 setup_irods.py: 156 - 
+-------------------------+
| Log Configuration Notes |
+-------------------------+

2024-08-05T21:30:07.166Z -    INFO -                 setup_irods.py: 157 - iRODS uses syslog for logging. If your OS has a running syslog service, messages
will appear in the system log file (normally located at /var/log/syslog).

See the following for more information about configuring an iRODS-specific log file:

  https://docs.irods.org/4.3.3/system_overview/troubleshooting/
2024-08-05T21:30:07.166Z -    INFO -                 setup_irods.py: 162 - 
+-------------------+
| Stopping iRODS... |
+-------------------+

2024-08-05T21:30:07.166Z -   DEBUG -                  controller.py: 189 - Calling stop on IrodsController
2024-08-05T21:30:07.166Z -    INFO -                  controller.py: 190 - Stopping iRODS server...
2024-08-05T21:30:08.675Z -    INFO -                  controller.py: 224 - Success
2024-08-05T21:30:08.675Z -    INFO -                 setup_irods.py: 165 - 
+---------------------------------------------+
| iRODS is configured and ready to be started |
+---------------------------------------------+

